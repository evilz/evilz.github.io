<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Evilz blog</title>
    <description>Code for Human
</description>
    <link>https://www.evilznet.com/</link>
    <atom:link href="https://www.evilznet.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 22 May 2018 14:24:51 +0000</pubDate>
    <lastBuildDate>Tue, 22 May 2018 14:24:51 +0000</lastBuildDate>
    <generator>Jekyll v3.8.2</generator>
    
      <item>
        <title>Retour sur la Fsharp Exchange 2018</title>
        <description>&lt;p&gt;La Fsharp Exchange est l‚Äôune des plus importantes conf√©rences de l‚Äôann√©e sur F# (c√¥t√© Europe).
Et pour l‚Äôoccasion, la communaut√© a r√©pondu pr√©sente avec plus de 160 personnes sur place.&lt;/p&gt;

&lt;p&gt;Au coeur de Londres, dans les locaux de Skills Matter, les pr√©sentations se sont encha√Æn√©es √† un rythme effr√©n√© avec une quinzaine de pr√©sentations par jour.&lt;/p&gt;

&lt;h2 id=&quot;la-communaut√©&quot;&gt;La communaut√©&lt;/h2&gt;

&lt;p&gt;La communaut√© F# est compos√©e de nombreuses personnes dans le monde entier, le langage √©tant open source on y trouve de nombreux contributeurs. 
Si certains sont au coeur de F# comme Steffen Forkmann &lt;a href=&quot;https://twitter.com/sforkmann&quot;&gt;@sforkmann&lt;/a&gt; ou Enrico Sada &lt;a href=&quot;https://twitter.com/enricosada&quot;&gt;@enricosada&lt;/a&gt;, d‚Äôautres contribuent √† l‚Äôoutillage comme Krzysztof Cie≈õlak &lt;a href=&quot;https://twitter.com/k_cieslak&quot;&gt;@k_cieslak&lt;/a&gt; sur &lt;a href=&quot;http://ionide.io&quot;&gt;ionide.io&lt;/a&gt; ou aux nombreuses librairies list√©es sur &lt;a href=&quot;https://github.com/fsprojects&quot;&gt;fsproject&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;De plus, nous avons cl√¥tur√© cette conf√©rence en mode table ronde avec une s√©lection de quelques contributeurs s√©lectionn√©s par Don Syme lui-m√™me.
En mode interview, ces contributeurs se sont pr√©sent√©s, ont pr√©sent√© leur projet, le parcours pour arriver √† contribuer et maintenir les projets.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;
    &lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Now starting the panel of &lt;a href=&quot;https://twitter.com/hashtag/fsharp?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#fsharp&lt;/a&gt; Rockstar OSS contributors ! &lt;a href=&quot;https://twitter.com/hashtag/fsharpx?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#fsharpx&lt;/a&gt; &lt;a href=&quot;https://t.co/7a4eNGJtVw&quot;&gt;pic.twitter.com/7a4eNGJtVw&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;‚Äî Alfonso Garcia-Caro (@alfonsogcnunez) &lt;a href=&quot;https://twitter.com/alfonsogcnunez/status/982294203718885376?ref_src=twsrc%5Etfw&quot;&gt;April 6, 2018&lt;/a&gt;&amp;lt;/blockquote&amp;gt;
&amp;lt;/div&amp;gt;&lt;/p&gt;

    &lt;p&gt;Ce qui rassemble toutes ces personnes, c‚Äôest avant tout la passion du code, du fonctionnel pour la plupart, et du partage. Il faut savoir que les √©changes les plus importants se passent en dehors des pr√©sentations pendant les pauses. Tout le monde est tr√®s accessible et il est m√™me possible d‚Äôavoir de petits code reviews sur un coin de table.&lt;/p&gt;

    &lt;div align=&quot;center&quot;&gt;
      &lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;
        &lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/hashtag/fsharpX?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#fsharpX&lt;/a&gt; we do whatever Scott Washin tells us to do üòÇ &lt;a href=&quot;https://twitter.com/SoatGroup?ref_src=twsrc%5Etfw&quot;&gt;@SoatGroup&lt;/a&gt; &lt;a href=&quot;https://t.co/4Y8cHCD21L&quot;&gt;pic.twitter.com/4Y8cHCD21L&lt;/a&gt;&lt;/p&gt;
        &lt;p&gt;‚Äî Vincent Bourdon (@Evilznet) &lt;a href=&quot;https://twitter.com/Evilznet/status/981812141874401280?ref_src=twsrc%5Etfw&quot;&gt;April 5, 2018&lt;/a&gt;&amp;lt;/blockquote&amp;gt;
&amp;lt;/div&amp;gt;&lt;/p&gt;

        &lt;p&gt;Voici une petite interview de Don Syme √† propos de la communaut√©.&lt;/p&gt;
        &lt;div align=&quot;center&quot;&gt;
          &lt;blockquote class=&quot;twitter-video&quot; data-lang=&quot;en&quot;&gt;
            &lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;I caught a quick chat with &lt;a href=&quot;https://twitter.com/dsyme?ref_src=twsrc%5Etfw&quot;&gt;@dsyme&lt;/a&gt;, creator of &lt;a href=&quot;https://twitter.com/hashtag/fsharp?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#fsharp&lt;/a&gt; language. We talk about &lt;a href=&quot;https://twitter.com/hashtag/fsharpX?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#fsharpX&lt;/a&gt; and F# community. //&lt;a href=&quot;https://twitter.com/mlusiak?ref_src=twsrc%5Etfw&quot;&gt;@mlusiak&lt;/a&gt; &lt;a href=&quot;https://t.co/Yj74tJIjCY&quot;&gt;pic.twitter.com/Yj74tJIjCY&lt;/a&gt;&lt;/p&gt;
            &lt;p&gt;‚Äî tretton37 (@tretton37) &lt;a href=&quot;https://twitter.com/tretton37/status/981909620401766400?ref_src=twsrc%5Etfw&quot;&gt;April 5, 2018&lt;/a&gt;&amp;lt;/blockquote&amp;gt;
&amp;lt;/div&amp;gt;&lt;/p&gt;

            &lt;h2 id=&quot;fsharp-everywhere-&quot;&gt;Fsharp Everywhere !&lt;/h2&gt;
            &lt;div align=&quot;center&quot;&gt;
              &lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;
                &lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Twitter: ‚ÄúF# is dead‚Äù, ‚ÄúMost F# devs moved to Haskell or something else‚Äù‚Ä¶ &lt;br /&gt;&lt;br /&gt;Meanwhile real world and industry &lt;a href=&quot;https://twitter.com/hashtag/fsharp?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#fsharp&lt;/a&gt; usage: &lt;a href=&quot;https://t.co/4OmYLXsBC0&quot;&gt;pic.twitter.com/4OmYLXsBC0&lt;/a&gt;&lt;/p&gt;
                &lt;p&gt;‚Äî Krzysztof Cie≈õlak (@k_cieslak) &lt;a href=&quot;https://twitter.com/k_cieslak/status/983321387703074816?ref_src=twsrc%5Etfw&quot;&gt;April 9, 2018&lt;/a&gt;&amp;lt;/blockquote&amp;gt;
&amp;lt;/div&amp;gt;&lt;/p&gt;

                &lt;p&gt;L‚Äôutilisation de F# n‚Äôen finit pas d‚Äô√©voluer ! C‚Äôest √©videmment un tr√®s bon langage (tout comme C#) mais deux faits importants aident √† cette progression :&lt;/p&gt;

                &lt;ul&gt;
                  &lt;li&gt;La mode du fonctionnel : on entend beaucoup parler de &lt;strong&gt;Haskel&lt;/strong&gt;, de &lt;strong&gt;ELM&lt;/strong&gt; ou plus simplement &lt;strong&gt;React&lt;/strong&gt;.&lt;/li&gt;
                  &lt;li&gt;Avec F#, on peut r√©pondre √† tous les besoins ! Et c‚Äôest ce qui √† √©t√© d√©montr√© pendant cette conf√©rence.&lt;/li&gt;
                &lt;/ul&gt;

                &lt;h3 id=&quot;pour-le-web&quot;&gt;Pour le WEB&lt;/h3&gt;

                &lt;ul&gt;
                  &lt;li&gt;c√¥t√© back on peut utiliser Giraffe, Suave, WebSharper, Freya ‚Ä¶&lt;/li&gt;
                  &lt;li&gt;c√¥t√© front : Fable et Fable.Elmish&lt;/li&gt;
                  &lt;li&gt;pour les deux, la stack SAFE permet de faire du Suave / Azure / Fable / Elmish quasiment en un claquement de doigts !&lt;/li&gt;
                &lt;/ul&gt;

                &lt;p&gt;La pr√©sentation de Tomasz Heimowski √©tait tout simplement impressionnante et tout le monde retiendra sa VITESSE de d√©veloppement et le feedback rapide que l‚Äôon peut avoir en F#.
&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11308-safe-apps-with-f-web-stack&quot;&gt;SAFE apps with F# web stack&lt;/a&gt; ‚Äì Tomasz Heimowski (&lt;a href=&quot;http://theimowski.com/talk-safe-stack/#/&quot;&gt;slides&lt;/a&gt;)&lt;/p&gt;

                &lt;h3 id=&quot;pour-lanalyse-de-donnes&quot;&gt;Pour l‚Äôanalyse de donn√©es&lt;/h3&gt;

                &lt;p&gt;F# permet facilement de manipuler des jeux de donn√©es gr√¢ce au design de code sous forme de pipeline. 
Cela permet de facilement ajouter/modifier des filtres, des s√©lections, des transformations sur les donn√©es.
De plus, les typeprovider ajoutent si besoin une notion de typage √† la vol√©e quasiment gratuite.
En utilisant la REPL et de simples scripts .fsx, on arrive √† visualiser des r√©sultats en quelques minutes.
Cette ann√©e, Jamie Dixon nous a parl√© de son exp√©rience avec son fils sur les courses de Stock cars avec un simple RASPBERRY PI :
  &lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11639-stock-cars-raspberry-pi-and-f-sharp&quot;&gt;STOCK CARS, RASPBERRY PI, AND F#&lt;/a&gt;&lt;/p&gt;

                &lt;h3 id=&quot;transpilage&quot;&gt;Transpilage&lt;/h3&gt;

                &lt;p&gt;F# √©tant un bon langage typ√© et fonctionnel, les d√©veloppeurs l‚Äôaiment jusqu‚Äô√† l‚Äôutiliser comme source pour √™tre transpil√© dans une autre plateforme. Cette ann√©e nous avons vu :&lt;/p&gt;

                &lt;ul&gt;
                  &lt;li&gt;&lt;strong&gt;Fable&lt;/strong&gt; : qui permet de transpiler en Javascript et faire du code pour navigateur ou du nodeJS&lt;/li&gt;
                  &lt;li&gt;&lt;strong&gt;FEZ&lt;/strong&gt;: qui transpile en code pour BEAM, pr√©sent√© par Karl Nilsson (&lt;a href=&quot;https://docs.google.com/presentation/d/1yos-mvWd01_78UNLpTpvABlyhizbp5td_91b03AuO7E/edit#slide=id.p&quot;&gt;slides&lt;/a&gt;)&lt;/li&gt;
                &lt;/ul&gt;

                &lt;h3 id=&quot;ecosystme-dotnet&quot;&gt;Ecosyst√®me dotnet&lt;/h3&gt;

                &lt;p&gt;Il y a encore plein de possibilit√©s, l‚Äôacc√®s aux donn√©es, la gestion de logs, le machine learling, etc. Il ne faut pas oublier qu‚Äôil est tout simplement possible de faire tout ce que l‚Äôon peut faire en dotnet ! Du mobile, des applis riches, des microservices, du cloud‚Ä¶&lt;/p&gt;

                &lt;h3 id=&quot;loutillage&quot;&gt;L‚Äôoutillage&lt;/h3&gt;

                &lt;p&gt;Tout ceci ne serait pas possible sans un bon outillage. Les IDEs sont de plus en plus nombreux avec chacun leurs propres fonctionnalit√©s. La plupart s‚Äôappuyant sur le &lt;a href=&quot;http://fsharp.github.io/FSharp.Compiler.Service/&quot;&gt;F# Compiler Services&lt;/a&gt;&lt;/p&gt;

                &lt;div align=&quot;center&quot;&gt;
                  &lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;
                    &lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;. &lt;a href=&quot;https://twitter.com/_cartermp?ref_src=twsrc%5Etfw&quot;&gt;@_cartermp&lt;/a&gt; shows how F# is now &quot;in the box&quot; in more ways than ever before. Great to see! &lt;a href=&quot;https://twitter.com/hashtag/fsharpX?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#fsharpX&lt;/a&gt; &lt;a href=&quot;https://t.co/rDS3W6Ctir&quot;&gt;pic.twitter.com/rDS3W6Ctir&lt;/a&gt;&lt;/p&gt;
                    &lt;p&gt;‚Äî Compositional IT (@compositionalit) &lt;a href=&quot;https://twitter.com/compositionalit/status/982171754226335744?ref_src=twsrc%5Etfw&quot;&gt;April 6, 2018&lt;/a&gt;&amp;lt;/blockquote&amp;gt;
&amp;lt;/div&amp;gt;&lt;/p&gt;

                    &lt;h2 id=&quot;fsharp-et-dotnet-core-et-microsoft&quot;&gt;Fsharp et Dotnet Core et Microsoft&lt;/h2&gt;

                    &lt;p&gt;L‚Äôun des points les plus marquants pour moi, c‚Äôest la strat√©gie de Microsoft qui a clairement chang√© ces derniers temps, et notamment depuis l‚Äôouverture en open source et l‚Äôarriv√©e de l‚Äô√©quipe Xamarin.
On constate une forte √©volution au travers de dotnet Core/standard et de la CLI.&lt;/p&gt;

                    &lt;p&gt;Mais en plus, F# fait maintenant partie de la strat√©gie ‚Äúmainstream‚Äù et les modifications apport√©es sur les outils sont constamment test√©es sur des environements F# et certaines librairies associ√©es.
Cela a d√©j√† permis de constater des bugs dans Packet et Nugets et la r√©solution des probl√®mes se fait en bonne collaboration.&lt;/p&gt;

                    &lt;div align=&quot;center&quot;&gt;
                      &lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;
                        &lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Whoa! üòµ this time it's sure Microsoft look deeply at F#! testing dotnet core against &lt;a href=&quot;https://twitter.com/safe_stack?ref_src=twsrc%5Etfw&quot;&gt;@safe_stack&lt;/a&gt; is amazing &lt;a href=&quot;https://twitter.com/_cartermp?ref_src=twsrc%5Etfw&quot;&gt;@_cartermp&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/fsharpX?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#fsharpX&lt;/a&gt;  &lt;a href=&quot;https://twitter.com/FableCompiler?ref_src=twsrc%5Etfw&quot;&gt;@FableCompiler&lt;/a&gt; &lt;a href=&quot;https://twitter.com/SoatGroup?ref_src=twsrc%5Etfw&quot;&gt;@SoatGroup&lt;/a&gt; &lt;a href=&quot;https://t.co/shdDofYRe2&quot;&gt;pic.twitter.com/shdDofYRe2&lt;/a&gt;&lt;/p&gt;
                        &lt;p&gt;‚Äî Vincent Bourdon (@Evilznet) &lt;a href=&quot;https://twitter.com/Evilznet/status/982175964665819138?ref_src=twsrc%5Etfw&quot;&gt;April 6, 2018&lt;/a&gt;&amp;lt;/blockquote&amp;gt;
&amp;lt;/div&amp;gt;&lt;/p&gt;

                        &lt;p&gt;Visual Studio s‚Äôenrichit enfin en fonctionnalit√©s. Il suffit de voir ce post : &lt;a href=&quot;https://blogs.msdn.microsoft.com/dotnet/2018/03/06/f-language-and-tools-update-for-visual-studio-2017-version-15-6/&quot;&gt;F# language and tools update for Visual Studio 2017 version 15.6&lt;/a&gt; fait par Phillip Carter.&lt;/p&gt;

                        &lt;blockquote&gt;
                          &lt;p&gt;We now build the F# Compiler Service project as a part of our CI, thanks to Steffen Forkmann&lt;/p&gt;
                        &lt;/blockquote&gt;

                        &lt;h2 id=&quot;liens-vers-les-prsentations&quot;&gt;Liens vers les pr√©sentations&lt;/h2&gt;

                        &lt;p&gt;Les vid√©os sont accessibles uniquement si vous avez pay√© l‚Äôacc√®s √† la conf√©rence, les slides sont quant √† elles publiques.&lt;/p&gt;

                        &lt;ul&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/10137-keynote-crossroads-f-sharp-in-the-middle-of-nowhere&quot;&gt;Keynote: Crossroads: F# in the middle of‚Ä¶ nowhere?&lt;/a&gt; ‚Äì Alfonso Garcia-Caro&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11304-fable-for-busy-moms-dads-how-fsharp-and-fable-help-me-to-spend-more-time-with-my-kids&quot;&gt;Fable for busy moms &amp;amp; dads! How F# and Fable help me to spend more time with my kids!&lt;/a&gt; ‚Äì Fran√ßois Nicaise (&lt;a href=&quot;https://whitetigle.github.io/fsharpx2018/&quot;&gt;slides&lt;/a&gt;)&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11312-fez-fsharp-type-safety-for-the-beam&quot;&gt;FEZ ‚Äì fsharp type safety for the BEAM&lt;/a&gt; ‚Äì Karl Nilsson (&lt;a href=&quot;https://docs.google.com/presentation/d/1yos-mvWd01_78UNLpTpvABlyhizbp5td_91b03AuO7E/edit#slide=id.p&quot;&gt;slides&lt;/a&gt;)&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11478-property-based-testing-in-f-sharp&quot;&gt;Property Based Testing in F#&lt;/a&gt; ‚Äì Christina Nicolau&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11310-elmish-get-your-dev-stack-back-under-control&quot;&gt;Elmish: get your dev stack back under control&lt;/a&gt; ‚Äì Maxime Mangel (&lt;a href=&quot;https://mangelmaxime.github.io/fsharp-exchange-2018-elmish/#/&quot;&gt;slides&lt;/a&gt;)&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11308-safe-apps-with-f-web-stack&quot;&gt;SAFE apps with F# web stack&lt;/a&gt; ‚Äì Tomasz Heimowski (&lt;a href=&quot;http://theimowski.com/talk-safe-stack/#/&quot;&gt;slides&lt;/a&gt;)&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11745-easing-the-path-to-f-sharp-adoption&quot;&gt;Easing the Path to F# Adoption&lt;/a&gt; ‚Äì Colin Bull&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11629-a-journey-into-the-f-sharp-compiler&quot;&gt;A journey into the F# compiler&lt;/a&gt; ‚Äì Steffen Forkmann (&lt;a href=&quot;https://forki.github.io/CompilerIntro/#/&quot;&gt;slides&lt;/a&gt;)&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11639-stock-cars-raspberry-pi-and-f-sharp&quot;&gt;STOCK CARS, RASPBERRY PI, AND F#&lt;/a&gt; ‚Äì Jamie Dixon&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11347-azure-f-sharpunctions&quot;&gt;Azure F#unctions&lt;/a&gt; ‚Äì Mikhail Shilkov (&lt;a href=&quot;https://www.slideshare.net/MikhailShilkov/azure-functions-92988186&quot;&gt;slides&lt;/a&gt;)&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11603-3d-model-manipulation-with-f-sharp&quot;&gt;3D Model Manipulation with F#&lt;/a&gt; ‚Äì Wael El Oraiby&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11481-lightning-talk-lessons-from-f-sharp-from-academic-prototypes-to-safety-critical-systems&quot;&gt;Lightning Talk: Lessons from F#: From Academic Prototypes to Safety-Critical Systems&lt;/a&gt; ‚Äì Heidy Khlaaf&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11593-lightning-talk-session-types-for-f-sharpers&quot;&gt;Lightning Talk: Session types for F#ers&lt;/a&gt; ‚Äì Fahd Abdeljallal&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11440-lightning-talk-f-sharp-support-in-jetbrains-rider&quot;&gt;Lightning Talk: F# Support in JetBrains Rider&lt;/a&gt; ‚Äì Eugene Auduchinok&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11439-keynote-f-sharp-code-i-love&quot;&gt;Keynote: F# Code I Love&lt;/a&gt; ‚Äì Don Syme (&lt;a href=&quot;https://twitter.com/dsyme/status/982238973861945344&quot;&gt;slides&lt;/a&gt;)&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/10138-keynote-thrilled-to-have-phillip-carter-hosting-a-keynote-at-fsharpx-2018&quot;&gt;Keynote: F# in 2018!&lt;/a&gt;¬†‚Äì¬†Phillip Carter&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11309-how-do-we-cook-highload-microservices-at-sbtech&quot;&gt;How do we cook highload microservices at SBTech&lt;/a&gt; ‚Äì Anton Moldovan&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11516-the-curious-case-of-freya-suave-and-giraffe-reducing-risks-in-picking-a-new-tech&quot;&gt;The Curious Case of Freya, Suave, and Giraffe: Reducing Risks In Picking a New Tech.&lt;/a&gt; ‚Äì Gien Verschatse&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/10265-keynote-can-t-wait-to-hear-from-mathias-brandewinder-at-fsharpx-2018&quot;&gt;Keynote: Deep Learning with CNTK and F#&lt;/a&gt;¬†‚Äì Mathias Brandewinder&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11306-geo-art-with-fsharp-and-ordnance-survey-data&quot;&gt;Geo-Art with F# and Ordnance Survey Data&lt;/a&gt; ‚Äì Kit Eason&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11506-distributed-tracing-lessons-learned&quot;&gt;Distributed Tracing, Lessons Learned&lt;/a&gt; ‚Äì Gina Marie Maini&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11602-dr-functionallove-or-how-eroad-learned-to-stop-worrying-and-love-f-sharp&quot;&gt;Lightning Talk: Dr FunctionalLove or: How EROAD learned to stop worrying and love F#&lt;/a&gt;¬†‚Äì Jim Bennett (&lt;a href=&quot;https://www.slideshare.net/JimBennett10/learning-to-love-f&quot;&gt;slides&lt;/a&gt;)&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018&quot;&gt;Lightning Talk: Existentials ‚Äì Playing Hide and Seek With Your Types&lt;/a&gt;¬†‚Äì Nicholas Cowle&lt;/li&gt;
                          &lt;li&gt;&lt;a href=&quot;https://skillsmatter.com/app/conferences/9419-f-sharp-exchange-2018/skillscasts/11438-park-bench-panel-hosted-by-don-syme&quot;&gt;Park Bench Panel hosted by Don Syme&lt;/a&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/blockquote&gt;
                    &lt;/div&gt;
                  &lt;/blockquote&gt;
                &lt;/div&gt;
              &lt;/blockquote&gt;
            &lt;/div&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/blockquote&gt;
    &lt;/div&gt;
  &lt;/blockquote&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
        <link>https://www.evilznet.com/2018/04/11/fsharp-exchange-2018/</link>
        <guid isPermaLink="true">https://www.evilznet.com/2018/04/11/fsharp-exchange-2018/</guid>
        
        <category>Web</category>
        
        <category>Informatique</category>
        
        
      </item>
    
      <item>
        <title>Convertir son blog en Progressive Web App</title>
        <description>&lt;p&gt;Cet article est le second de la s√©rie d√©di√©e aux retours d‚Äôexp√©rience sur le sujet  : &lt;strong&gt;Obtenir un site performant avec Accelerated Mobile Page, Progressive Web App et un content delivery network&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.evilznet.com/2018/02/14/AMP-WPA-CDN-1/&quot;&gt;Partie 1 : AMP&lt;/a&gt;
Partie 2 : PWA 
Partie 3 : CDN &amp;amp; SSL : √† venir ‚Ä¶&lt;/p&gt;

&lt;h2 id=&quot;pwa-cest-quoi-&quot;&gt;PWA, c‚Äôest quoi ?&lt;/h2&gt;

&lt;p&gt;L√† encore il s‚Äôagit d‚Äôune id√©e lanc√©e par google. Si tout est expliqu√© ici &lt;a href=&quot;https://developers.google.com/web/progressive-web-apps/&quot;&gt;https://developers.google.com/web/progressive-web-apps/&lt;/a&gt;,
je vais tenter d‚Äôen r√©sumer rapidement les principes.&lt;/p&gt;

&lt;p&gt;L‚Äôobjectif est d‚Äôavoir une application web qui puisse √™tre directement install√©e sur mobile sans passer par un store, et qui puisse √™tre index√©e par les moteurs de recherche.
Ces PWA devront se rapprocher le plus possible d‚Äôune application native en mati√®re de fonctionnalit√©s et donc s‚Äôadapter en fonction des capacit√©s du p√©riph√©rique utilis√© : 
G√©olocalisation
Push-notification
Audio / Vid√©o
‚Ä¶ et plein d‚Äôautres 
Ce site vous permet de voir les capacit√©s de votre navigateur : &lt;a href=&quot;https://whatwebcando.today/camera-microphone.html&quot;&gt;https://whatwebcando.today/camera-microphone.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;√Ä la diff√©rence des applications natives, une PWA devra r√©pondre rapidement. Autrement dit, on ne va pas t√©l√©charger 40Mo lors de la premi√®re ouverture ! Le premier chargement sera le plus souvent limit√© √† un &lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt; vide, ensuite l‚Äôapplication va t√©l√©charger de fa√ßon asynchrone le contenu que l‚Äôon veut afficher lorsque cela est n√©cessaire.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4607/26446689588_f53f02b193_o.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Le t√©l√©chargement et la mise en cache du shell ou des contenus se basent sur une nouvelle API, les ‚ÄúService Workers‚Äù, pas encore compl√®tement support√©e par tous les navigateurs.
cf. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Browser_compatibility&quot;&gt;tableau de compatibilit√© des navigateurs sur MDN&lt;/a&gt;.
Le service worker est simplement un background worker avec lequel on communique pour effectuer des t√¢ches de fond.&lt;/p&gt;

&lt;h2 id=&quot;amp--pwa-compatible-&quot;&gt;AMP + PWA compatible ?&lt;/h2&gt;

&lt;p&gt;Ces deux technologies ne partagent pas exactement les m√™mes objectifs.
Si AMP a pour but d‚Äôacc√©l√©rer le web sur mobile en le rendant tr√®s l√©ger, PWA est plus lourd puisque son but est presque de remplacer les applications natives et le passage par un store.&lt;/p&gt;

&lt;p&gt;Il y a encore quelques mois, ces deux technologies n‚Äô√©taient donc pas compatibles entre elles, mais depuis, le composant &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;amp-install-serviceworker&amp;gt;&lt;/code&gt; est disponible et permet d‚Äôinstaller le service worker depuis une page APM.
&lt;a href=&quot;https://www.ampproject.org/docs/reference/components/amp-install-serviceworker&quot;&gt;https://www.ampproject.org/docs/reference/components/amp-install-serviceworker&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;mise-en-place-du-service-worker&quot;&gt;Mise en place du service worker&lt;/h2&gt;

&lt;p&gt;Un service worker est un script fonctionnant en t√¢che de fond, et qui est d√©tach√© du contexte UI. Autrement dit, le worker n‚Äôa pas d‚Äôacc√®s direct au DOM ni aux interactions utilisateur. Toute la communication se fait au travers d‚Äô√©v√©nements et de l‚ÄôAPI postMessage.
Le worker a cependant acc√®s √† toutes les requ√™tes/r√©ponses Http ; il fonctionne un peu comme un proxy. De plus, les APIs de cache et de stockage sont disponibles,
il est alors possible pour chaque requ√™te de v√©rifier si une r√©ponse existe dans le cache et dans le cas contraire on va pouvoir y ajouter la r√©ponse associ√©e √† la requ√™te pour la prochaine fois.&lt;/p&gt;

&lt;p&gt;Le service worker poss√®de un cycle de vie pr√©cis apr√®s son enregistrement :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4710/39521147105_011573ea11_o.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vous pouvez tester facilement avec ce script en regardant les logs dans la console :&lt;/p&gt;

&lt;p&gt;[code language=‚Äùjs‚Äù]
self.addEventListener(‚Äòinstall‚Äô, event =&amp;gt; {
  console.log(‚ÄòV1 installing‚Ä¶‚Äô);
});&lt;/p&gt;

&lt;p&gt;self.addEventListener(‚Äòactivate‚Äô, event =&amp;gt; {
  console.log(‚ÄòV1 now ready to handle fetches!‚Äô);
});&lt;/p&gt;

&lt;p&gt;self.addEventListener(‚Äòfetch‚Äô, event =&amp;gt; {
});
[/code]&lt;/p&gt;

&lt;p&gt;Le composant AMP va donc r√©f√©rencer un script qui d√©finit les &lt;code class=&quot;highlighter-rouge&quot;&gt;handlers&lt;/code&gt; pour ces √©v√©nements.&lt;/p&gt;

&lt;p&gt;[code language=‚Äùjs‚Äù]&lt;/p&gt;
&lt;amp-install-serviceworker src=&quot;/serviceworker.js&quot; layout=&quot;nodisplay&quot;&gt;
&lt;/amp-install-serviceworker&gt;
&lt;p&gt;[/code]&lt;/p&gt;

&lt;p&gt;Dans mon cas, j‚Äôai fait le choix de ne pas faire de shell, le contenu complet de chaque page sera mis en cache pour chaque requ√™te.
Le fichier serviceworker.js se trouve √† la racine de mon site et ne contient que le code suivant :&lt;/p&gt;

&lt;p&gt;[code language=‚Äùjs‚Äù]
self.addEventListener(‚Äòfetch‚Äô, function (event) {
    event.respondWith(
        caches.open(‚Äòmysite‚Äô).then(function (cache) {
            return cache.match(event.request).then(function (response) {
                var fetchPromise = fetch(event.request).then(function (networkResponse) {
                    if (event.request.method === ‚ÄúGET‚Äù) {
                        cache.put(event.request, networkResponse.clone());
                    }
                    return networkResponse;
                })&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;            return response || fetchPromise;
        })
    })
); }); [/code]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;√Ä chaque requ√™te de type GET, je mets la r√©ponse en cache si ce n‚Äô√©tait pas fait.&lt;/p&gt;

&lt;p&gt;Si vous pr√©f√©rez partir sur un design avec un shell, il est recommand√© de pr√©charger et mettre en cache les ressources n√©cessaires au shell d√®s l‚Äôinstallation du Service Worker.&lt;/p&gt;

&lt;p&gt;Le script ressemblera alors √† celui-ci :&lt;/p&gt;

&lt;p&gt;[code language=‚Äùjs‚Äù]
var cacheName = ‚Äòshell-content‚Äô;
var filesToCache = [
  ‚Äò/css/styles.css‚Äô,
  ‚Äò/js/scripts.js‚Äô,
  ‚Äò/images/logo.svg‚Äô,
  ‚Äò/offline.html‚Äô,
  ‚Äò/‚Äô,
];&lt;/p&gt;

&lt;p&gt;self.addEventListener(‚Äòinstall‚Äô, function(e) {
  console.log(‚Äò[ServiceWorker] Install‚Äô);
  e.waitUntil(
    caches.open(cacheName).then(function(cache) {
      console.log(‚Äò[ServiceWorker] Caching app shell‚Äô);
      return cache.addAll(filesToCache);
    })
  );
});
[/code]&lt;/p&gt;

&lt;h2 id=&quot;https-ou-rien&quot;&gt;HTTPS ou rien&lt;/h2&gt;

&lt;p&gt;Les services workers fonctionnent uniquement avec le protocole HTTPS ou en localhost. 
Fonctionnant comme un proxy, pouvant modifier le contenu des requ√™tes et des r√©ponses, il est √©vident que tout doit se passer dans un contexte s√©curis√© gr√¢ce √† un certificat SSL. 
Si vous ma√Ætrisez votre infra, installer un certificat sur votre serveur ne devrait pas √™tre compliqu√©. 
Dans mon cas, je suis sur Github pages avec un nom de domaine personnalis√© et dans ce cas, l‚Äôutilisation du protocole HTTPS n‚Äôest pas possible. Nous verrons dans la troisi√®me partie de l‚Äôarticle comme obtenir un site en HTTPS gr√¢ce au service de CloudFare.&lt;/p&gt;

&lt;h2 id=&quot;manifest&quot;&gt;Manifest&lt;/h2&gt;

&lt;p&gt;Les m√©canismes de mise en cache sont maintenant fonctionnels, il reste cependant une derni√®re partie de l‚Äôapplication √† ajouter : &lt;code class=&quot;highlighter-rouge&quot;&gt;le manifeste&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Le manifeste permet d‚Äôajouter des informations de description de votre application web:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;son nom&lt;/li&gt;
  &lt;li&gt;une description&lt;/li&gt;
  &lt;li&gt;son auteur&lt;/li&gt;
  &lt;li&gt;des ic√¥nes&lt;/li&gt;
  &lt;li&gt;des couleurs de th√®me&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Il suffit de cr√©er un document texte au format JSON et de le r√©f√©rencer dans votre site :&lt;/p&gt;

&lt;p&gt;[code language=‚Äùhtml‚Äù]&lt;/p&gt;
&lt;link rel=&quot;manifest&quot; href=&quot;/manifest.json&quot; /&gt;

&lt;p&gt;[/code]&lt;/p&gt;

&lt;p&gt;Voici le contenu de mon fichier :&lt;/p&gt;

&lt;p&gt;[code language=‚Äùjs‚Äù]
{
name: ‚ÄúEvilznet Blog‚Äù,
short_name: ‚ÄúEvilznet‚Äù,
description: ‚ÄúPersonal blog about computing stuff‚Äù,
start_url: ‚Äú.‚Äù,
display: ‚Äústandalone‚Äù,
background_color: ‚Äú#FFFFFF‚Äù,
theme_color: ‚Äú#FFFFFF‚Äù,
icons: [
{
src: ‚Äú/android-icon-36x36.png‚Äù,
sizes: ‚Äú36x36‚Äù,
type: ‚Äúimage/png‚Äù,
density: ‚Äú0.75‚Äù
},
{
src: ‚Äú/android-icon-48x48.png‚Äù,
sizes: ‚Äú48x48‚Äù,
type: ‚Äúimage/png‚Äù,
density: ‚Äú1.0‚Äù
},
{
src: ‚Äú/android-icon-72x72.png‚Äù,
sizes: ‚Äú72x72‚Äù,
type: ‚Äúimage/png‚Äù,
density: ‚Äú1.5‚Äù
},
{
src: ‚Äú/android-icon-96x96.png‚Äù,
sizes: ‚Äú96x96‚Äù,
type: ‚Äúimage/png‚Äù,
density: ‚Äú2.0‚Äù
},
{
src: ‚Äú/android-icon-144x144.png‚Äù,
sizes: ‚Äú144x144‚Äù,
type: ‚Äúimage/png‚Äù,
density: ‚Äú3.0‚Äù
},
{
src: ‚Äú/android-icon-192x192.png‚Äù,
sizes: ‚Äú192x192‚Äù,
type: ‚Äúimage/png‚Äù,
density: ‚Äú4.0‚Äù
},
{
src: ‚Äú/android-icon-512x512.png‚Äù,
sizes: ‚Äú512x512‚Äù,
type: ‚Äúimage/png‚Äù
}
]
}
[/code]&lt;/p&gt;

&lt;p&gt;Le but du manifeste est de permettre l‚Äôinstallation de l‚Äôapplication sur l‚Äô√©cran d‚Äôaccueil d‚Äôun appareil. Si vous utilisez chrome sur android, lors de la premi√®re visite un menu va appara√Ætre en bas de l‚Äô√©cran, vous proposant d‚Äôajouter l‚Äôapplication sur votre √©cran d‚Äôaccueil android.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4768/40372775602_e1380fb9ba_o.png&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;devtools&quot;&gt;DevTools&lt;/h2&gt;

&lt;p&gt;Pendant le d√©veloppement de votre application, vous voudrez v√©rifier le fonctionnement et peut √™tre d√©boguer l‚Äôapplication. 
On va alors utiliser l‚Äôonglet &lt;code class=&quot;highlighter-rouge&quot;&gt;Application&lt;/code&gt; des devtools de chrome.
On y retrouve les informations du service worker, des stockages et du manifeste.
Vous pourrez notamment :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;arr√™ter / d√©marrer le service worker&lt;/li&gt;
  &lt;li&gt;envoyer des messages au service worker&lt;/li&gt;
  &lt;li&gt;nettoyer le cache&lt;/li&gt;
  &lt;li&gt;passer en mode en offline&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4631/39421337385_893fc710ed_o.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4706/38509645510_b05c58e272_o.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4671/39421337495_02e4d3bbbf_o.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Si l‚Äôon peut facilement imaginer que les applications natives pourraient dans la plupart des cas √™tre remplac√©es par une ‚Äòsimple Application Web‚Äô, l‚Äôaspect commercial va jouer √©norm√©ment dans la d√©mocratisation du concept.
Google, qui mise principalement sur les pubs internet au travers de son moteur de recherche, va fortement pousser la technologie. Mais des g√©ants comme Apple dont les revenus proviennent principalement de l‚ÄôAppStore ne la priorisent pas.
C‚Äôest assez paradoxal lorsque l‚Äôon se rappelle de la sortie du premier Iphone et des mots de Steve Jobs √† l‚Äô√©poque :&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The full Safari engine is inside of iPhone. And so, you can write amazing Web 2.0 and Ajax apps that look exactly and behave exactly like apps on the iPhone. And these apps can integrate perfectly with iPhone services. They can make a call, they can send an email, they can look up a location on Google Maps.
And guess what? There‚Äôs no SDK that you need! You‚Äôve got everything you need if you know how to write apps using the most modern web standards to write amazing apps for the iPhone today. So developers, we think we‚Äôve got a very sweet story for you. You can begin building your iPhone apps today.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/8Vq993Td6ys?start=37&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Il parlait clairement de ce genre de technologie. Quel visionnaire ce Steve.&lt;/p&gt;

&lt;p&gt;Dans le prochain article, je vais vous montrer comment utiliser les services de CloudFare pour r√©soudre le probl√®me du protocole HTTPS et profiter du cache sur son CDN.&lt;/p&gt;
</description>
        <pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate>
        <link>https://www.evilznet.com/2018/03/05/AMP-WPA-CDN-2/</link>
        <guid isPermaLink="true">https://www.evilznet.com/2018/03/05/AMP-WPA-CDN-2/</guid>
        
        <category>Web</category>
        
        <category>Informatique</category>
        
        
      </item>
    
      <item>
        <title>Convertir son blog avec Accelerated Mobile Page</title>
        <description>&lt;p&gt;Dans cette suite d‚Äôarticles, je vais vous partager mon retour d‚Äôexp√©rience sur la mise en place d‚ÄôAMP (Accelerated Mobile Pages) et de PWA (Progressive Web App) et l‚Äôutilisation d‚Äôun CDN sur mon blog dans le but d‚Äôacc√©l√©rer le temps de t√©l√©chargement et de rendu.
L‚Äôarticle n‚Äôa donc pas vocation √† entrer dans les d√©tails techniques de ces deux technologies qui sont par ailleurs tr√®s bien document√©es sur les sites suivants :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ampproject.org&quot;&gt;www.ampproject.org&lt;/a&gt;
&lt;a href=&quot;https://developers.google.com/web/progressive-web-apps/&quot;&gt;developers.google.com/web/progressive-web-apps/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;contexte&quot;&gt;Contexte&lt;/h2&gt;

&lt;p&gt;Avant d‚Äôentrer dans le vif du sujet, un petit mot sur le contexte et sur mes objectifs. 
Je voulais rafra√Æchir quelque peu mon blog et je regardais du cot√© de medium.com.
Medium.com est tr√®s utilis√© en ce moment du fait que la lecture des articles mais aussi la r√©daction sont tr√®s user-friendly. 
Cependant je voulais garder le contr√¥le total sur mes articles, et la migration de mon Jekyll sur Github vers Medium semblait relativement co√ªteuse en temps.
J‚Äôai donc cherch√© un th√®me Jekyll se rapprochant du visuel de m√©dium.&lt;/p&gt;

&lt;h2 id=&quot;mise-en-place-damp&quot;&gt;Mise en place d‚ÄôAMP&lt;/h2&gt;

&lt;p&gt;Apr√®s quelques recherches sur Google, mon choix s‚Äôest port√© sur ce th√®me Jekyll : &lt;a href=&quot;https://github.com/ageitgey/amplify&quot;&gt;Amplify&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Il propose une interface proche de celle de Medium ainsi qu‚Äôune impl√©mentation de Google AMP.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4628/39401625214_9333e2b478_z.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;quest-ce-que-google-amp-&quot;&gt;Qu‚Äôest-ce que Google AMP ?&lt;/h2&gt;

&lt;p&gt;Accelerated Mobile Pages de Google (¬´ Google AMP ¬ª ou Google ‚ö°) est un projet open-source qui d√©finit des r√®gles pour cr√©er des sites Web qui se chargent presque instantan√©ment, m√™me sur des appareils mobiles avec des connexions lentes. 
Le but est de rendre le contenu en moins de 2 secondes ce qui offre une excellente exp√©rience utilisateur.&lt;/p&gt;

&lt;h2 id=&quot;fonctionnement&quot;&gt;Fonctionnement&lt;/h2&gt;

&lt;p&gt;Les pages AMP sont construites avec 3 composants principaux :&lt;/p&gt;

&lt;p&gt;Un HTML enrichi de composants &lt;code class=&quot;highlighter-rouge&quot;&gt;AMP HTML&lt;/code&gt; qui apporte aussi certaines restrictions pour assurer des performances fiables.
Une biblioth√®que de scripts javascript : &lt;code class=&quot;highlighter-rouge&quot;&gt;AMP JS&lt;/code&gt;.
Le cache &lt;code class=&quot;highlighter-rouge&quot;&gt;Google AMP Cache&lt;/code&gt; (en option) fournit les pages AMP HTML (Google met en cache le site).&lt;/p&gt;

&lt;h2 id=&quot;amplify&quot;&gt;Amplify&lt;/h2&gt;

&lt;p&gt;La documentation d‚ÄôAmplify est relativement simple et claire. Je n‚Äôai eu qu‚Äô√† cloner le repository, copier mes articles dedans et lancer le site pour apercevoir le r√©sultat.
Bien que le premier aper√ßu soit rapide, cela ne veut pas dire que votre site est valide pour AMP. 
Pour v√©rifier la validit√© du site, j‚Äôai utilis√© le plug-in Chrome que l‚Äôon trouve ici :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4761/26239553328_baf47322f0_o.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/amp-validator/nmoffdblmcmgeicmolmhobpoocbbmknc&quot;&gt;chrome.google.com/webstore/detail/amp-validator/nmoffdblmcmgeicmolmhobpoocbbmknc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lorsqu‚Äôun site AMP est d√©tect√©, une ic√¥ne va appara√Ætre dans la barre de Chrome : en vert si le site est valide, en rouge s‚Äôil ne l‚Äôest pas comme c‚Äôest le cas ci-dessous.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4754/39401624924_20e9af5fdf_o.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On peut remarquer dans la capture que toutes les erreurs sont li√©es √† la balise &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img /&amp;gt;&lt;/code&gt;. Effectivement AMP interdit la balise &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img /&amp;gt;&lt;/code&gt; qui est remplac√©e par une balise sp√©ciale &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;amp-img /&amp;gt;&lt;/code&gt;. Cette balise n‚Äôest pas reconnue par le navigateur par d√©faut, ce qui permet de ne pas t√©l√©charger les images de fa√ßon synchrone lors de l‚Äôaffichage de la page. 
C‚Äôest le script AMP li√© aux composants AMP-IMG qui va se charger de t√©l√©charger l‚Äôimage de fa√ßon asynchrone une fois le contenu de votre page charg√©.&lt;/p&gt;

&lt;p&gt;Le texte est alors affich√© tr√®s rapidement, et des placeholders sont affich√©s le temps que les images se chargent.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/AuRUJxlqfUc?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Si cela parait simple √† expliquer, cette contrainte n‚Äôest pas anodine.
Dans &lt;code class=&quot;highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt;, les articles et les pages sont √©crits en &lt;code class=&quot;highlighter-rouge&quot;&gt;markdown&lt;/code&gt; et donc les images sont sous ce format :&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;! [alt-text](image-url)&lt;/code&gt;&lt;br /&gt;
ce qui rend le html suivant 
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img src=‚Äùimage-url‚Äù alt=‚Äùalt-text‚Äù /&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Et donc ce n‚Äôest pas compatible AMP‚Ä¶&lt;/p&gt;

&lt;p&gt;Plusieurs solutions sont alors possibles :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Modifier tous les articles √† la main. Si vous avez beaucoup d‚Äôarticles √ßa risque d‚Äô√™tre long, tr√®s long‚Ä¶ De plus je pr√©f√®re garder un markdown avec peu de HTML et de choses trop sp√©cifiques.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ne pas mettre d‚Äôimages ;p&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ajouter un genre de middleware qui convertit les &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img/&amp;gt;&lt;/code&gt; en &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;amp-img/&amp;gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;C‚Äôest bien cette derni√®re solution que je vais mettre en ≈ìuvre. Pour √©viter de r√©inventer la roue, j‚Äôai fait quelques recherches. J‚Äôai trouv√© mon bonheur sur GitHub avec ce filtre  : &lt;a href=&quot;https://github.com/juusaw/amp-jekyll/blob/master/lib/jekyll/amp_filter.rb&quot;&gt;https://github.com/juusaw/amp-jekyll/blob/master/lib/jekyll/amp_filter.rb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Malheureusement je me suis heurt√© √† une nouvelle difficult√© :(
Mon site √©tant h√©berg√© sur Github pages, je ne peux utiliser que les packages support√©s par Github (pour reg√©n√©rer des pages Jekyll).&lt;/p&gt;

&lt;p&gt;Seulement, ce filtre utilise deux d√©pendances : &lt;code class=&quot;highlighter-rouge&quot;&gt;nokogiri&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;fastimage&lt;/code&gt;. Si la premi√®re est support√©e par Github ce n‚Äôest pas le cas pour la seconde. 
Fastimage permet de r√©cup√©rer les infos de largeur et hauteur des images, ce qui est n√©cessaire pour un AMP correct. De plus, Fastimage fonctionne pour des liens externes en http, pas seulement pour des fichiers en local.
Conclusion Github ne pourra pas lancer Jekyll pour moi et je devrais commiter le rendu statique du site moi-m√™me.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Pour rappel GitHub pages vous permet de publier :&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Un Jekyll sur la branche gh-pages ou Master&lt;/li&gt;
    &lt;li&gt;Un site statique sur la branche master ou dans le r√©pertoire /docs de la branche master
Plus d‚Äôinfos ici : &lt;a href=&quot;https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/&quot;&gt;help.github.com/articles/configuring-a-publishing-source-for-github-pages/&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;composant-amp-suppl√©mentaires&quot;&gt;Composant AMP suppl√©mentaires&lt;/h3&gt;

&lt;p&gt;D‚Äôautres types de ressources comme les vid√©os ou les iframes ont aussi des composants AMP.
Vous pouvez trouver la liste √† cette adresse &lt;a href=&quot;https://www.ampproject.org/docs/reference/components&quot;&gt;www.ampproject.org/docs/reference/components&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;La mise en place est toujours la m√™me : un script √† r√©f√©rencer dans la balise HEAD de votre page, puis l‚Äôutilisation du tag AMP du composant.&lt;/p&gt;

&lt;p&gt;Pour les vid√©os et les iframes, j‚Äôai fait le choix de simplement modifier mes articles avec le code des tags amp. Ayant tr√®s peu de contenu de ce type et vu qu‚Äôil n‚Äôexiste pas pour cela de syntaxe Markdown, c‚Äô√©tait pour moi le plus simple, mais il est bien s√ªr imaginable de cr√©er un filtre/middleware si vous pensez avoir trop de contenu.&lt;/p&gt;

&lt;p&gt;Comme j‚Äôutilise des vid√©os Youtube, le tag est tr√®s simple. Il suffit de sp√©cifier l‚Äôid de la vid√©o en question. C‚Äôest m√™me plus simple au final que le code embedded via une iframe.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;amp-youtube data-videoid=&quot;FbcwF57DifI&quot; layout=&quot;responsive&quot; width=&quot;480&quot; height=&quot;270&quot;&amp;gt;&amp;lt;/amp-youtube&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;mise-en-production&quot;&gt;Mise en production&lt;/h2&gt;

&lt;p&gt;Une fois le site pr√™t pour la production et mis en ligne, il est possible de le valider une fois de plus en utilisant la console Google que l‚Äôon trouve ici : &lt;a href=&quot;https://search.google.com/test/amp&quot;&gt;search.google.com/test/amp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4760/26328527078_98a1edfc97_c.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Si votre site est valide, vous pouvez le soumettre au moteur de recherche pour que dans quelques temps, apr√®s r√©-indexation, voir que votre site poss√®de une version AMP et faire remonter ces pages dans le moteur de recherche lorsque l‚Äôon navigue depuis un mobile.
Dans la plupart des cas, les pages seront m√™me mises en cache dans CDN Google. Lors d‚Äôune recherche, on pourra voir le site mis en avant avec une ic√¥ne tr√®s discr√®te indiquant qu‚Äôil s‚Äôagit bien de la version AMP.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4754/39401624924_20e9af5fdf_o.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Avec juste la mise en place d‚ÄôAMP, le gain en temps de chargement se fait d√©j√† ressentir. 
Cela est d√ª au fait d‚Äôavoir des pages bien plus l√©g√®res avec juste du texte centr√©, mais aussi et surtout au fait de charger les scripts et les images de fa√ßon asynchrone. Plus rien n‚Äôest bloquant pour le rendu de la page. Le CDN peut aussi retirer de la latence si votre site est visit√© depuis partout sur le globe.&lt;/p&gt;

&lt;p&gt;Je ne peux pas malheureusement pas donner de chiffre pr√©cis sur le gain : cela d√©pendant trop du contenu de chaque page et des performances de la machine (traitement + r√©seau) au moment de l‚Äôaffichage, mais au final sur l‚Äôensemble de mes tests, le chargement complet se fait entre 2 √† 5 sec. L‚Äôimportant √©tant le ressenti du visiteur.&lt;/p&gt;

&lt;p&gt;J‚Äôaurais tr√®s bien pu m‚Äôarr√™ter ici car le r√©sultat est plut√¥t satisfaisant, mais bien que le site soit rapide, il ne fonctionne pas en mode offline. 
&lt;a href=&quot;http://blog.soat.fr/2018/03/obtenir-un-site-performant-avec-accelerated-mobile-page-progressive-web-app-et-un-content-delivery-network-part-2-pwa/&quot;&gt;Dans le prochain article, nous verrons comment ajouter un mode offline avec PWA&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Feb 2018 00:00:00 +0000</pubDate>
        <link>https://www.evilznet.com/2018/02/14/AMP-WPA-CDN-1/</link>
        <guid isPermaLink="true">https://www.evilznet.com/2018/02/14/AMP-WPA-CDN-1/</guid>
        
        <category>Web</category>
        
        <category>Informatique</category>
        
        
      </item>
    
      <item>
        <title>Du Fsharp √† NewCrafts 2017</title>
        <description>&lt;p&gt;J‚Äôai eu la chance d‚Äôassister aux deux jours de la &lt;a href=&quot;http://ncrafts.io&quot;&gt;conf√©rence NewCrafts de cette ann√©e&lt;/a&gt;.
Sur les deux jours, nous avons pu assister √† de nombreuses pr√©sentations tr√®s int√©ressantes,
mais je vais ici m‚Äôint√©resser aux sessions abordant du Fsharp et auxquelles j‚Äôai pu participer.&lt;/p&gt;

&lt;h2 id=&quot;scott-wlaschin---thirteen-ways-of-looking-at-a-turtle&quot;&gt;Scott Wlaschin - Thirteen ways of looking at a Turtle&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;@ScottWlaschin&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4590/38677096634_9fa35623fb_z.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tout le monde se pose la m√™me question en lisant le titre de la session : ‚ÄúUne tortue ? What ‚Ä¶?‚Äù
En fait Scott nous propose en utilisant l‚Äôimage de cette tortue une API tr√®s simpliste permettant de tracer des traits.
La ‚Äútortue‚Äù peut se d√©placer en avant, tourner sur un angle donn√© et finalement dessiner ou non le trait pendant son d√©placement.&lt;/p&gt;

&lt;p&gt;Cette API de quatre m√©thodes peut sembler trop simple pour √™tre vraiment int√©ressante, mais nous allons voir sa r√©alisation en utilisant 13 approches diff√©rentes.
Cela va du mod√®le orient√© objet classique, en passant par de l‚Äôactor model puis de l‚Äôevent sourcing.&lt;/p&gt;

&lt;p&gt;Je vous recommande fortement de jeter un coup d‚Äô≈ìil, car m√™me si le code est pr√©sent√© en F#, cela reste applicable dans d‚Äôautres plateformes/langages.
L‚Äôensemble du contenu est en ligne sur &lt;a href=&quot;https://fsharpforfunandprofit.com/turtle/&quot;&gt;son fameux site&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;michel-grootjans-et-thomas-coopman--playing-with-projections&quot;&gt;Michel Grootjans et Thomas Coopman : Playing with projections&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;@michelgrootjans @tcoopman&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;J‚Äôai particip√© √† un atelier, o√π nous avons jou√© avec des projections. 
Lorsque l‚Äôon fait de l‚Äôevent sourcing, il va souvent falloir relire et rejouer les √©v√©nements d‚Äôune certaine fa√ßon, que ce soit pour retourner dans un √©tat particulier ou pour faire des analyses, il y a souvent besoin de faire des transformations sur des paquets d‚Äô√©v√©nements.&lt;/p&gt;

&lt;p&gt;L‚Äôobjectif de cet atelier √©tait donc de travailler sur ces transformations qui sont appel√©es des Projections.
Le domaine m√©tier est relativement simple, mais poss√®de d√©j√† de nombreux types d‚Äô√©v√©nements.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4681/24519809777_39e840ba0c_z.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;J‚Äôavoue ne pas avoir fait l‚Äôexercice directement en F# mais en C# en utilisant pas mal de linq. Donc facilement portable en F#.
D‚Äôailleurs l‚Äôexercice est disponible dans de nombreux langages.&lt;/p&gt;

&lt;p&gt;Je vous invite √† regarder &lt;a href=&quot;https://github.com/michelgrootjans/playing_with_projections&quot;&gt;ici&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;evelina-gabasova---the-force-awakens&quot;&gt;Evelina Gabasova - The F#orce Awakens&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;@evelgab&lt;/strong&gt;&lt;/p&gt;

&lt;amp-youtube data-videoid=&quot;R10rPhpLvr8&quot; layout=&quot;responsive&quot; width=&quot;480&quot; height=&quot;270&quot;&gt;&lt;/amp-youtube&gt;

&lt;p&gt;Apr√®s une introduction digne de la saga Star Wars, Evelina nous a pr√©sent√© comment elle a r√©alis√© une analyse autour des personnages en utilisant les scripts des sept films.&lt;/p&gt;

&lt;p&gt;1) La premi√®re √©tape consistait √† r√©ussir √† parser les diff√©rents scripts des films pour en extraire les noms des personnages. Elle a alors utilis√© les sc√®nes pour en d√©duire les personnages connect√©s.
Cela ne s‚Äôest pas fait sans mal puisque chaque script poss√®de un format diff√©rent et que certains personnages n‚Äôont m√™me pas de dialogue.&lt;/p&gt;

&lt;p&gt;Pour cette premi√®re √©tape ce sont des regex et des active patterns qui ont √©t√© utilis√©s.&lt;/p&gt;

&lt;div class=&quot;language-fsharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Active pattern to parse the contents of the script&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SceneTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scenePattern&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[ 0-9]*(INT.|EXT.)[ A-Z0-9]&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;namePattern&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^[/A-Z0-9]+[-]*[/A-Z0-9 ]*[-]*[/A-Z0-9 ]+$&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scenePattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Success&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;SceneTitle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;namePattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Success&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Word&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2) Deuxi√®me √©tape : Analyser les donn√©es.&lt;/p&gt;

&lt;p&gt;Evelina nous a montr√© ses diff√©rents &lt;a href=&quot;https://notebooks.azure.com/&quot;&gt;Azure notebook&lt;/a&gt; d‚Äôanalyse.
Ces notebooks, fortement inspir√©s de ceux disponibles depuis longtemps en Python, permettent de m√©langer texte et code ex√©cutable.
Il est m√™me possible d‚Äôutiliser la lib Fsharp.Data pour g√©n√©rer des graphiques plus ou moins complexes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4728/39355368362_eea1c8ed5d_z.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3) Troisi√®me √©tape : Utiliser plusieurs apis publiques fournissant des informations suppl√©mentaires sur Star Wars.
Il s‚Äôagit principalement de l‚Äôapi &lt;a href=&quot;http://swapi.co/API&quot;&gt;Swapi&lt;/a&gt;
Elle fournit des d√©tails sur de nombreux √©l√©ments de la saga et poss√®de m√™me les clients pour plusieurs langages.
C‚Äôest Evelina qui a cr√©√© le client F#.&lt;/p&gt;

&lt;p&gt;Pour cela elle a utilis√© une fonctionnalit√© tr√®s puissante de F# : les Type Provider.
Une simple r√©f√©rence vers le package JsonProvider a cr√©√© deux constantes contenant une json d‚Äôexemple : une avec les champs minimum et l‚Äôautre compl√®te. Le provider se charge de cr√©er dynamiquement un mod√®le.&lt;/p&gt;

&lt;p&gt;Elle a compl√©t√© sa d√©mo en croisant des donn√©es r√©cup√©r√©es d‚ÄôIMDB en utilisant la m√™me technique, mais un provider diff√©rent : ‚ÄòHtmlProvider‚Äô qui est lui capable de r√©cup√©rer un tableau de donn√©es pour notre exemple.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4642/39385329141_3591e4cb6e_z.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pour tous les d√©tails, rendez-vous sur &lt;a href=&quot;http://evelinag.com/blog/2016/01-25-social-network-force-awakens/&quot;&gt;son blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Que faut-il retenir de tout √ßa ? 
Plusieurs points sont int√©ressants √† garder en t√™te :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;F# permet de tr√®s vite et avec peu de code prototyper l‚Äôanalyse de donn√©es.
les Type Provider et les notebooks sont aussi d‚Äôune grande aide.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Commencer par analyser un ensemble de donn√©es connu avant de se lancer sur des analyses √† grande √©chelle.
Bien que le domaine li√© √† Star Wars puisse para√Ætre geek, c‚Äôest surtout un domaine connu par beaucoup de monde, et cela permet de s‚Äôapercevoir rapidement des r√©sultats incoh√©rents.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;gien-verschatse---playing-nice-together-how-to-use-f-in-a-brownfield-project&quot;&gt;Gien Verschatse - Playing nice together: how to use F# in a brownfield project&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;@selketjah&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4732/39385329281_ae3fc96c21_n.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;J‚Äôattendais cette session avec impatience. Gien, d√©veloppeuse Belge pour des jeux de casino en ligne, nous a fait un retour d‚Äôexp√©rience sur son int√©gration de d√©veloppement F# au sein d‚Äôun existant en C#.&lt;/p&gt;

&lt;p&gt;Elle a donc pass√© en revue les diff√©rentes fonctionnalit√©s qui pouvaient ou non √™tre utilis√©es depuis un programme C# voire VB.net.&lt;/p&gt;

&lt;p&gt;J‚Äôai refait moi-m√™me quelques tests suite √† cette pr√©sentation et &lt;a href=&quot;https://github.com/evilz/Fsharp-from-csharp&quot;&gt;mon code est disponible ici&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ce que je retiens surtout de ce retour d‚Äôexp√©rience, c‚Äôest le courage de Gien √† s‚Äô√™tre lanc√©e dans l‚Äôaventure F#, dans le sens o√π il est difficile (pour ne pas dire impossible) de trouver des missions en F#. C‚Äôest donc √† nous d‚Äôintroduire au fur et √† mesure cette techno si cela nous semble ad√©quat.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;krzysztof-cieslak---hacking-f-in-js-ecosystem&quot;&gt;Krzysztof Cieslak - Hacking F# in JS ecosystem&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;@k_cieslak&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4725/39355368152_ff3dc158a0_z.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dans cette session, Krzysztof nous pr√©sente le dernier Framework √† la mode dans la communaut√© FSharp, &lt;code class=&quot;highlighter-rouge&quot;&gt;Fable&lt;/code&gt;.
Fable est un compilateur F# vers JavaScript qui s‚Äôappuie sur Babel.&lt;/p&gt;

&lt;p&gt;Fable va prendre votre code F#, en extraire un AST et le fournir √† Babel qui fait le reste du travail pour obtenir un code Js pour Navigateur ou NodeJS.
On peut alors se poser la question : Mais pourquoi ?
La r√©ponse simple serait ‚Äúparce qu‚Äôon peut !‚Äù ou encore ‚Äúpourquoi pas !‚Äù&lt;/p&gt;

&lt;p&gt;Mais il y a de vrais avantages √† utiliser F# comme langage principal :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Une approche fonctionnelle&lt;/li&gt;
  &lt;li&gt;Tout est fortement typ√© : Record type et Union Type&lt;/li&gt;
  &lt;li&gt;Toutes les fonctionnalit√©s avanc√©es : pattern matching, Computation Expression&lt;/li&gt;
  &lt;li&gt;R√©utilisation de code c√¥t√© serveur&lt;/li&gt;
  &lt;li&gt;Pragmatique&lt;/li&gt;
  &lt;li&gt;Communaut√©&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Il nous a ensuite pr√©sent√© l‚Äôoutil √† travers plusieurs d√©mos dans le navigateur avec du JS tr√®s simple, mais aussi une d√©mo react.&lt;/p&gt;

&lt;p&gt;Il faut aussi savoir que Fable permet la g√©n√©ration de sourcemap ; il est donc possible de d√©boguer le code F# depuis la fen√™tre de DevTool de Chrome !&lt;/p&gt;

&lt;p&gt;La derni√®re version de Fable est utilisable directement depuis la cli dotnet et permet donc d‚Äôinitialiser rapidement un projet ou de d√©marrer un serveur : 
 dotnet fable start&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://fable.io/blog/Introducing-1-0-beta.html&quot;&gt;Plus d‚Äôinfos sur ce billet du blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;De plus si comme moi vous vous demandez comment jouer avec du code d‚Äôune librairie externe et comment r√©cup√©rer tous les types un peu comme le fait Typescript, les devs de la communaut√© ont pens√© √† tout et ont cr√©√© cet outil : &lt;a href=&quot;https://www.npmjs.com/package/ts2fable&quot;&gt;ts2fable&lt;/a&gt;, qui permet de convertir un type definition de Typescript en Fsharp.&lt;/p&gt;

&lt;p&gt;Vous trouverez plus d‚Äôinformations et de d√©mos sur &lt;a href=&quot;http://fable.io/&quot;&gt;le site officiel&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;mathias-brandewinder---serverless-f-with-azure-functions-fsibot-goes-nano-services&quot;&gt;Mathias Brandewinder - Serverless F# with Azure Functions: fsibot goes nano-services&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;@brandewinder&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4644/39385329341_8e1455883c_z.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Le Professeur Tournesol nous a tr√®s rapidement montr√© comment mettre en place gr√¢ce aux Azure Functions un syst√®me Server Less (ou presque) en F#.&lt;/p&gt;

&lt;p&gt;Ce que j‚Äôappr√©cie principalement sur le syst√®me des Azure Functions c‚Äôest l‚Äôinterface en ligne simple et agr√©able √† utiliser. Il est vraiment facile de cr√©er une nouvelle fonction et de d√©finir le trigger qui va la d√©clencher. 
Il y a d√©j√† pas mal de triggers disponibles et nous avons pu voir l‚Äôutilisation d‚Äôun trigger bas√© sur une horloge et d‚Äôun autre sur des messages queue.&lt;/p&gt;

&lt;p&gt;      &lt;/p&gt;

&lt;p&gt;Le FsiBot de Mathias utilise ces deux triggers. L‚Äôapplication regarde √† intervalles r√©guliers les tweets d‚Äôun channel comportant du F#, compile et s‚Äôex√©cute.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4599/38677096784_1554bbcf02_z.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mathias-brandewinder/fsibot-serverless&quot;&gt;Le code est disponible ici&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://brandewinder.com/2017/04/01/azure-function-app-diagram/&quot;&gt;Et un petit billet explicatif ici&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;et-pour-conclure&quot;&gt;Et pour conclure&lt;/h2&gt;

&lt;p&gt;Deux journ√©es finalement assez riches pour la communaut√© F#. Et m√™me si les 45min de pr√©sentation ne permettent pas de rentrer dans le d√©tail, cela a l‚Äôavantage de pr√©senter la technologie et les possibilit√©s du langage aux d√©veloppeurs.
Je vous invite donc √† regarder de pr√®s ce langage .net au travers des diff√©rents liens fournis ainsi que sur http://fsharp.org et &lt;a href=&quot;https://github.com/fsprojects/awesome-fsharp&quot;&gt;awesome-fsharp&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 07 Jun 2017 00:00:00 +0000</pubDate>
        <link>https://www.evilznet.com/2017/06/07/Du-fsharp-a-newcraft-2017/</link>
        <guid isPermaLink="true">https://www.evilznet.com/2017/06/07/Du-fsharp-a-newcraft-2017/</guid>
        
        <category>dotnet</category>
        
        <category>Informatique</category>
        
        
      </item>
    
      <item>
        <title>Installer VScode sur votre Nexus 5</title>
        <description>&lt;h1 id=&quot;utilisez-votre-t√©l√©phone-comme-poste-de-d√©veloppement&quot;&gt;Utilisez votre t√©l√©phone comme poste de d√©veloppement&lt;/h1&gt;

&lt;p&gt;De quoi s‚Äôagit-il exactement ?
Dans cette article je vais vous montrer comment transformer votre t√©l√©phone android en poste de travail avec un IDE.
Pour √™tre plus clair nous allons voir comment flasher un Nexus 5 avec un OS nomm√© MaruOS et installer Visual Studio Code.&lt;/p&gt;

&lt;p&gt;L‚Äôid√©e n‚Äôest pas nouvelle, et certain parmis vous auront surement d√©j√† entendu parl√© de projets comme Windows Continuum, qui permet notamment de travailler avec les produits de la gamme Office.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4690/27628499129_318e06e7e8.jpg&quot; alt=&quot;microsoft display dock&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ou encore de Andromium et Sentio https://www.sentio.com/. qui tente de cr√©er et vendre un ‚Äúsuperbook‚Äù qui se r√©sume √† un √©cran de 11‚Äù et un clavier.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4646/24540013647_7a970ed87d_z.jpg&quot; alt=&quot;sentio superbook&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mais MaruOS poss√®de des avantages non n√©gligeables :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Ca marche aujourd‚Äôhui !&lt;/li&gt;
  &lt;li&gt;On a sous la main un linux complet !&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;pr√©-requis&quot;&gt;Pr√©-requis&lt;/h1&gt;

&lt;p&gt;Avant de vous lancer dans l‚Äôaventure voici une petite liste du mat√©riel n√©cessaire :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;un t√©l√©phone Nexus 5 ou 7 que l‚Äôon peut flasher sans crainte (d‚Äôautres mod√®les seront disponible plus tard)&lt;/li&gt;
  &lt;li&gt;un clavier bluetooth&lt;/li&gt;
  &lt;li&gt;une souris bluetooth&lt;/li&gt;
  &lt;li&gt;un c√¢ble de connexion SlimPort USB-to-HDMI&lt;/li&gt;
  &lt;li&gt;du Wifi&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Personnellement, j‚Äôutilise un clavier &lt;code class=&quot;highlighter-rouge&quot;&gt;it works&lt;/code&gt; trouv√© √† Darty.
&lt;img src=&quot;https://farm5.staticflickr.com/4591/39375522522_60a73e844c.jpg&quot; alt=&quot;clavier bluetooth&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Et une souris Razer Orochi
&lt;img src=&quot;https://farm5.staticflickr.com/4734/24540013737_b6b2cb5027_z.jpg&quot; alt=&quot;razer orochi&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;maru-os&quot;&gt;Maru OS&lt;/h2&gt;

&lt;p&gt;La premi√®re √©tape consiste √† installer MaruOS sur le t√©l√©phone.
Qu‚Äôest ce que Maru ? Maru c‚Äôest ‚Äúsimplement‚Äù un Android 6 + un linux debian qui tournent en parall√®le sur votre t√©l√©phone.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4735/24540013907_aeb507a4b1_z.jpg&quot; alt=&quot;maru oss&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vous aurez du coup un t√©l√©phone standard Android et d√®s que vous le connectez en utilisant le c√¢ble SlimPort sur un √©cran en hdmi, la parti linux va se mettre en route et s‚Äôafficher √† l‚Äô√©cran. Notez que pendant ce temps votre t√©l√©phone reste utilisable.&lt;/p&gt;

&lt;p&gt;Dans la suite nous allons voir comment installer VS Code, mais √©videmment les possibilit√©s sont quasi infinies tant que ce que vous voulez installer existe pour linux sous une architecture ARM. Car oui n‚Äôoubliez pas que les t√©l√©phones sont, dans la plupart des cas, sur une technologie ARM et donc cote performance ca se ressent de temps en temps.
Il sera donc par exemple impossible de compiler du code C# :(&lt;/p&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sauvegardez tous vos documents, photos, contacts ‚Ä¶ qui sont sur le t√©l√©phone !!! 
Nous allons le flasher en utilisant une restauration ce qui va effacer toutes les donn√©es&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;1-activer-le-mode-d√©veloppeur-et-le-debug-usb&quot;&gt;1. Activer le mode d√©veloppeur et le debug USB&lt;/h4&gt;

&lt;h5 id=&quot;sur-votre-pc&quot;&gt;Sur votre PC&lt;/h5&gt;
&lt;p&gt;Il faut dans un premier temps installer les drivers usb. Pour les obtenir il y a deux possibilit√©s :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;T√©l√©charger les drivers ici : &lt;a href=&quot;http://developer.android.com/sdk/win-usb.html&quot;&gt;http://developer.android.com/sdk/win-usb.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Utiliser l‚Äôandroid SDK manager&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://farm5.staticflickr.com/4735/25535590248_406c1a9995_z.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;sur-le-t√©l√©phone&quot;&gt;Sur le t√©l√©phone&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;Dans les param√®tres, allez dans la section Syst√®me&lt;/li&gt;
  &lt;li&gt;A propos du t√©l√©phone&lt;/li&gt;
  &lt;li&gt;Tapez 7 fois sur le num√©ro de build pour devenir d√©veloppeur !&lt;/li&gt;
  &lt;li&gt;Revenez dans les param√®tres et dans Systeme&lt;/li&gt;
  &lt;li&gt;Puis dans Les options de d√©veloppeur&lt;/li&gt;
  &lt;li&gt;Activez le debug USB&lt;/li&gt;
  &lt;li&gt;Branchez le cable USB&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si tout va bien le t√©l√©phone est d√©tecter et les drivers s‚Äôinstallent tout seul.&lt;/p&gt;

&lt;h4 id=&quot;2-t√©l√©charger-la-rom&quot;&gt;2. T√©l√©charger la Rom&lt;/h4&gt;

&lt;p&gt;En fonction de votre syst√®me: Mac Os, Linux ou Windows une release avec les scripts d‚Äôinstallation est disponible ici &lt;a href=&quot;https://github.com/maruos/maruos/releases&quot;&gt;https://github.com/maruos/maruos/releases&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;L‚Äôavantage c‚Äôest qu‚Äôil vous suffi d‚Äôex√©cuter un script et de suivre le programme d‚Äôinstallation qui est capable de d√©bloquer bootloader et flasher Maru en quelques √©tapes.&lt;/p&gt;

&lt;p&gt;Dans mon cas je vais utiliser la version pour windows. Pour plus d‚Äôinfo sur l‚Äôinstallation rendez-vous ici : &lt;a href=&quot;https://github.com/maruos/maruos/wiki/Installation-Guide&quot;&gt;https://github.com/maruos/maruos/wiki/Installation-Guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;D√©zippez le contenu du zip et lancez l‚Äôex√©cution du fichier install et suivez le processus&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:&lt;span class=&quot;se&quot;&gt;\m&lt;/span&gt;aru-v0.4-installer-hammerhead-windows-0db8cdcb&amp;gt;install.cmd

Welcome to the Maru installer!

In order to &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;Maru you will need to:

1. Connect your device to your computer over USB

2. Enable USB Debugging on your device:

   1.  Go to the Settings app and scroll down to
       the System section

       NOTE: If you already have &lt;span class=&quot;s2&quot;&gt;&quot;Developer options&quot;&lt;/span&gt;
       under System &lt;span class=&quot;k&quot;&gt;then &lt;/span&gt;go directly to &lt;span class=&quot;c&quot;&gt;#5&lt;/span&gt;

   2.  Tap on &lt;span class=&quot;s2&quot;&gt;&quot;About phone&quot;&lt;/span&gt;
   3.  Tap &lt;span class=&quot;s2&quot;&gt;&quot;Build number&quot;&lt;/span&gt; 7 &lt;span class=&quot;nb&quot;&gt;times &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;until &lt;/span&gt;you get a message
       that says you are now a developer
   4.  Go back to the main Settings app
   5.  Tap on &lt;span class=&quot;s2&quot;&gt;&quot;Developer options&quot;&lt;/span&gt;
   6.  Ensure that &lt;span class=&quot;s2&quot;&gt;&quot;USB debugging&quot;&lt;/span&gt; is enabled
   7.  Tap &lt;span class=&quot;s2&quot;&gt;&quot;OK&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;you see a dialog asking you to allow
       USB Debugging &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;your computer&lt;span class=&quot;s1&quot;&gt;'s RSA key fingerprint

WARNING: Installing Maru will wipe all your personal data
so make sure you first back-up anything important!

Are you ready to install Maru? (yes/no):

Aborting installation.

Press any key to exit...

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;post-install&quot;&gt;Post install&lt;/h3&gt;

&lt;p&gt;Vous avez maintenant un android tout neuf, plus exactement un Maru OS.
La pluspart du temps on voudra quand meme avoir les services google qui ne sont pas install√©s par d√©faut pisque qu‚Äôil ne s‚Äôagit pas d‚Äôune distrib officielle.&lt;/p&gt;

&lt;h4 id=&quot;restauration-de-google-apps&quot;&gt;Restauration de Google Apps&lt;/h4&gt;

&lt;p&gt;Si vous souhaitez restaurer l‚Äôacc√®s au Play Store de votre appareil, vous devrez effectuer un peu de travail suppl√©mentaire.&lt;/p&gt;

&lt;p&gt;Nous allons utiliser TWRP pour restaurer les applications Google:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;T√©l√©chargez les applications Play √† partir de Open Gapps et enregistrez le zip dans
 le m√™me r√©pertoire que vous avez d√©compress√© l‚Äôinstallateur Maru:&lt;/p&gt;

    &lt;p&gt;Pour Maru OS v0.2.4 et ci-dessous:
 &lt;a href=&quot;http://opengapps.org/?arch=arm&amp;amp;api=5.1&amp;amp;variant=pico&quot;&gt;http://opengapps.org/?arch=arm&amp;amp;api=5.1&amp;amp;variant=pico&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;Pour Maru OS v0.3 et sup√©rieur:
 &lt;a href=&quot;http://opengapps.org/?arch=arm&amp;amp;api=6.0&amp;amp;variant=pico&quot;&gt;http://opengapps.org/?arch=arm&amp;amp;api=6.0&amp;amp;variant=pico&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;T√©l√©chargez TWRP pour votre appareil et enregistrez-le dans le m√™me r√©pertoire que vous
 d√©zipp√© l‚Äôinstallateur Maru:&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;https://twrp.me/Devices&quot;&gt;https://twrp.me/Devices&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Connectez votre appareil √† votre ordinateur, activez le d√©bogage USB et suivez les instructions ci-dessous en fonction de votre plate-forme.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;mac-ou-linux&quot;&gt;Mac ou Linux&lt;/h5&gt;

&lt;p&gt;Ouvrez un terminal et ex√©cutez les op√©rations suivantes:&lt;/p&gt;

&lt;p&gt;Astuce: vous devrez peut-√™tre ex√©cuter la commande fastboot en tant que root si elle se bloque √† &lt;code class=&quot;highlighter-rouge&quot;&gt;waiting for any device&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &amp;lt;unzipped maru installer directory&amp;gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./adb push &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &amp;lt;gapps filename&amp;gt;.zip /sdcard/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./adb reboot bootloader
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./fastboot flash recovery &amp;lt;twrp filename&amp;gt;.img
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;windows&quot;&gt;Windows&lt;/h5&gt;

&lt;p&gt;Ouvrez l‚Äôinvite de commande et ex√©cutez les op√©rations suivantes:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &amp;lt;unzipped maru installer directory&amp;gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;adb push &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &amp;lt;gapps filename&amp;gt;.zip /sdcard/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;adb reboot bootloader
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;fastboot flash recovery &amp;lt;twrp filename&amp;gt;.img
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vous allez maintenant √™tre dans le bootloader et devez faire quelques √©tapes suppl√©mentaires:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Utilisez le bouton &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Volume Up&amp;gt;&lt;/code&gt; de votre appareil pour parcourir les options du bootloader
 en ‚Äúmode de r√©cup√©ration‚Äù et appuyez sur le bouton &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Power&amp;gt;&lt;/code&gt; pour d√©marrer dans la r√©cup√©ration TWRP&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Appuyez sur ‚ÄúInstaller‚Äù&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Appuyez sur le fichier zip des applications Google que vous avez t√©l√©charg√© pr√©c√©demment (vous devrez peut-√™tre faire d√©filer vers le bas).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Balayez pour confirmer le flash des applications Google&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Appuyez sur ‚ÄúRed√©marrer le syst√®me‚Äù pour red√©marrer dans Maru&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Vous devriez maintenant avoir des applications Google Play!&lt;/p&gt;

&lt;h4 id=&quot;configurer-les-connections&quot;&gt;Configurer les connections&lt;/h4&gt;

&lt;p&gt;Connectez depuis le syst√®me Android votre clavier et souris en bluetooth. G√©n√©ralement il faut entrer un code au clavier pour valider sa connection.
Connectez aussi votre wifi.&lt;/p&gt;

&lt;p&gt;Connectez le t√©l√©phone avec le cable &lt;code class=&quot;highlighter-rouge&quot;&gt;SlimPort&lt;/code&gt; pour d√©mmarer Linux.&lt;/p&gt;

&lt;h2 id=&quot;installation-vs-code&quot;&gt;Installation VS Code&lt;/h2&gt;

&lt;h3 id=&quot;installation-depuis-les-sources&quot;&gt;Installation depuis les sources&lt;/h3&gt;

&lt;p&gt;Nous allons voir comment compiler en quelques commande Visual Studio Code depuis les sources disponibles sur Github.
Cela n√©cessite plusieurs outils et frameworks de d√©veloppement, notamment NodeJs et python.&lt;/p&gt;

&lt;h4 id=&quot;1-installation-des-outils-de-d√©veloppement&quot;&gt;1/ installation des outils de d√©veloppement&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;curl
curl &lt;span class=&quot;nt&quot;&gt;-sL&lt;/span&gt; https://deb.nodesource.com/setup_6.x | &lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-E&lt;/span&gt; bash -
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; nodejs

&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;libx11-dev libxkbfile-dev
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; build-essential
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; libxss1
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; libgconf-2-4
//sudo apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;python

&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;rpm
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;2-compile&quot;&gt;2/ compile&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/microsoft/vscode
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;vscode
./scripts/npm.sh &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--arch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;armhf

&lt;span class=&quot;c&quot;&gt;# building Visual Studio Code Debian package on ARM&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# get source code&lt;/span&gt;
git clone git@github.com:Microsoft/vscode.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;vscode

&lt;span class=&quot;c&quot;&gt;# build debian package&lt;/span&gt;
./scripts/npm.sh &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--arch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;armhf
./node_modules/.bin/gulp vscode-linux-arm-build-deb

&lt;span class=&quot;c&quot;&gt;# locate built package, install and run&lt;/span&gt;
find &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.deb &lt;span class=&quot;c&quot;&gt;#this will give location of built package&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dpkg &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;location-from-previous-step]
code-oss &lt;span class=&quot;c&quot;&gt;# to run the installed program&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;3-install-from-packages-&quot;&gt;3/ install from packages !&lt;/h4&gt;

&lt;p&gt;Merci a headmelted d‚Äôavoir fait tout le travail :) 
Pour tous les infos rendez-vous ici &lt;a href=&quot;https://code.headmelted.com/&quot;&gt;https://code.headmelted.com/&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;wget
&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &amp;lt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; wget &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; - https://code.headmelted.com/installers/apt.sh &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Bien que cela fonctionne, il faut avouer que la puissance de l‚ÄôARM n‚Äôaide pas √† obtenir une experience utilisateur des plus aggr√©ables.
Il faut esp√©rer que l‚Äôon puisse un jour installer MaruOS sur des t√©l√©phones bien plus puissants.&lt;/p&gt;
</description>
        <pubDate>Sun, 14 May 2017 00:00:00 +0000</pubDate>
        <link>https://www.evilznet.com/2017/05/14/vscode-on-nexus-5/</link>
        <guid isPermaLink="true">https://www.evilznet.com/2017/05/14/vscode-on-nexus-5/</guid>
        
        <category>dotnet</category>
        
        <category>Informatique</category>
        
        
      </item>
    
      <item>
        <title>Introduction √† l'authentification OAuth2 avec ASPNET Core et GitHub</title>
        <description>&lt;p&gt;Dans cette s√©rie d‚Äôarticles, nous allons voir comment mettre en place une authentification OAuth2 au travers d‚Äôune application &lt;strong&gt;ASP.NET CORE&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Apr√®s quelques rappels sur le protocole, nous aborderons la mise en place de notre application de gestion des Gists en trois √©tapes :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Une utilisation directe du middleware OAuth2 fourni par MS&lt;/li&gt;
  &lt;li&gt;Une utilisation d‚Äôun middleware sp√©cifique √† Github en utilisant le Aspnet Identity&lt;/li&gt;
  &lt;li&gt;Une petite application permettant de g√©rer vos gists&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;oauth2&quot;&gt;OAuth2&lt;/h2&gt;

&lt;p&gt;Le protocole OAuth 2.0 est maintenant un standard pour l‚Äôauthentification. Il permet √† un utilisateur de donner l‚Äôacc√®s √† ses propres ressources d√©tenues par un fournisseur comme Google, GitHub, Facebook‚Ä¶  √† une application tierce.
Le plus souvent, il est utilis√© pour se connecter √† des applications en tant que simple fournisseur d‚Äôidentit√© (SSO). Cela permet de se connecter sans cr√©er un nouveau compte et sans exposer son mot de passe sur le site ou l‚Äôapplication.&lt;/p&gt;

&lt;h5 id=&quot;pour-r√©sumer-oauth2-permet&quot;&gt;Pour r√©sumer OAuth2 permet&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;De ne pas diffuser ses mots de passe √† des sites sans confiance&lt;/li&gt;
  &lt;li&gt;De contr√¥ler ce que l‚Äôapplication tierce pourra faire et quelles donn√©es elle pourra utiliser&lt;/li&gt;
  &lt;li&gt;De r√©voquer les autorisations quand bon vous semble&lt;/li&gt;
  &lt;li&gt;Mettre √† jour votre profil et surtout votre mot de passe √† un seul endroit&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;lorsque-lon-parle-de-oauth2-on-distingue-4-r√¥les-&quot;&gt;Lorsque l‚Äôon parle de OAuth2, on distingue 4 r√¥les :&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;L‚Äôutilisateur : propri√©taire de la ressource&lt;/li&gt;
  &lt;li&gt;Le serveur de ressources : qui h√©berge la/les ressources et expose des APIs&lt;/li&gt;
  &lt;li&gt;Le client :  l‚Äôapplication qui invoque les APIs et est utilis√©e par l‚Äôutilisateur qui a besoin d‚Äôun token OAuth&lt;/li&gt;
  &lt;li&gt;Le serveur d‚Äôautorisation : qui √©met le jeton utilis√© par le client&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Le flux des √©changes OAuth2 se pr√©sente comme suit :&lt;/p&gt;

&lt;amp-img src=&quot;https://farm9.staticflickr.com/8365/29088727302_3a39833a82_o_d.png&quot; width=&quot;470&quot; height=&quot;650&quot; layout=&quot;responsive&quot; alt=&quot;AMP&quot;&gt;&lt;/amp-img&gt;

&lt;ol&gt;
  &lt;li&gt;Le client fait une demande d‚Äôautorisation au fournisseur de services&lt;/li&gt;
  &lt;li&gt;Le fournisseur de services authentifie l‚Äôutilisateur et demande √† l‚Äôutilisateur son autorisation d‚Äôacc√®s aux donn√©es&lt;/li&gt;
  &lt;li&gt;Si l‚Äôutilisateur autorise le client, le fournisseur de services initialise une redirection vers le site client avec un code d‚Äôacc√®s temporaire.&lt;/li&gt;
  &lt;li&gt;Le client demande alors un jeton en utilisant le code d‚Äôacc√®s temporaire&lt;/li&gt;
  &lt;li&gt;Le serveur d‚Äôautorisation accorde un jeton d‚Äôacc√®s qui peut √™tre utilis√© pour authentifier les demandes ult√©rieures de ressources prot√©g√©es&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;pr√©requis&quot;&gt;Pr√©requis&lt;/h2&gt;

&lt;p&gt;Avant de continuer, v√©rifiez que vous avez correctement install√© .net Core et Visual Studio 2015 Update 3 si besoin.
Si cela n‚Äôest pas le cas, merci de suivre les &lt;a href=&quot;https://www.microsoft.com/net/core#windows&quot;&gt;√©tapes d‚Äôinstallation fournies par Microsoft&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Dans cette s√©rie d‚Äôarticles, je vais utiliser Visual Studio 2015, mais il est tout √† fait possible d‚Äôutiliser un autre √©diteur (VS Code, Sublime, Atom‚Ä¶).&lt;/p&gt;

&lt;h2 id=&quot;mise-en-place-du-middleware-oauth2&quot;&gt;Mise en place du middleware OAuth2&lt;/h2&gt;

&lt;p&gt;Dans ce premier article, nous allons cr√©er une application permettant de se connecter avec compte GitHub, afficher les informations des Claims et des Tokens puis de se d√©connecter.
Voici le sc√©nario final :&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Home page sans √™tre authentifi√©&lt;/strong&gt;&lt;/p&gt;
&lt;amp-img src=&quot;https://farm9.staticflickr.com/8060/29088734012_da6cd90c25_o_d.png&quot; width=&quot;620&quot; height=&quot;460&quot; layout=&quot;responsive&quot; alt=&quot;Home page sans √™tre authentifi√©&quot;&gt;&lt;/amp-img&gt;

&lt;p&gt;&lt;strong&gt;Login via Github&lt;/strong&gt;&lt;/p&gt;
&lt;amp-img src=&quot;https://farm9.staticflickr.com/8480/29117135511_2ff54e2bd5_o_d.png&quot; width=&quot;620&quot; height=&quot;460&quot; layout=&quot;responsive&quot; alt=&quot;Login via Github&quot;&gt;&lt;/amp-img&gt;

&lt;p&gt;&lt;strong&gt;Home page en √©tant authentifi√© avec GitHub&lt;/strong&gt;&lt;/p&gt;
&lt;amp-img src=&quot;https://farm9.staticflickr.com/8541/29161391346_47d44b4312_o_d.png&quot; width=&quot;620&quot; height=&quot;460&quot; layout=&quot;responsive&quot; alt=&quot;Home page en √©tant authentifi√© avec GitHub&quot;&gt;&lt;/amp-img&gt;

&lt;h3 id=&quot;cr√©ation-de-lapplication-dans-github&quot;&gt;Cr√©ation de l‚Äôapplication dans GitHub&lt;/h3&gt;

&lt;p&gt;Avant de nous lancer dans l‚Äô√©criture de code C#, commen√ßons par cr√©er une application sur GitHub.
Connectez-vous sur Github, √©ditez votre profil puis rendez-vous sur la page OAuth applications.
L‚Äôonglet affich√© par d√©faut liste toutes les applications autoris√©es √† acc√©der √† vos donn√©es Github : c‚Äôest ici que l‚Äôon peut r√©voquer une autorisation pour une application.
Cependant, c‚Äôest le second onglet ‚ÄúD√©velopper applications‚Äù qui nous int√©resse.
Cliquez sur &lt;em&gt;Register a new application&lt;/em&gt; et remplissez le formulaire comme suit :&lt;/p&gt;

&lt;amp-img src=&quot;https://farm9.staticflickr.com/8100/29161391106_8337809ac1_o_d.png&quot; width=&quot;620&quot; height=&quot;460&quot; layout=&quot;responsive&quot; alt=&quot;Cr√©ation de l‚Äôapplication dans GitHub&quot;&gt;&lt;/amp-img&gt;

&lt;p&gt;Vous pourrez, en cas de besoin, modifier les informations ult√©rieurement.&lt;/p&gt;

&lt;p&gt;Quelques remarques concernant les URLs :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Je vais utiliser un site en HTTPS&lt;/li&gt;
  &lt;li&gt;L‚ÄôURL concerne √©videmment un site en cours de d√©veloppement ‚Äúlocalhost‚Äù&lt;/li&gt;
  &lt;li&gt;J‚Äôutilise un port libre !&lt;/li&gt;
  &lt;li&gt;Le path &lt;code class=&quot;highlighter-rouge&quot;&gt;/signin-github&lt;/code&gt; sera la partie de notre application qui ex√©cute notre middleware Oauth&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Une fois l‚Äôapplication cr√©√©e, Github va vous fournir deux cl√©s : le &lt;strong&gt;clientId&lt;/strong&gt; et le &lt;strong&gt;ClientSecret&lt;/strong&gt; qui sont n√©cessaires √† la configuration du middleware.&lt;/p&gt;

&lt;p&gt;Certains peuvent se demander pourquoi utiliser un site ou une page en HTTPS.
La r√©ponse simple est que l‚Äôon veut √©viter de faire circuler des informations en clair sur le r√©seau et encore plus lorsque qu‚Äôil s‚Äôagit d‚Äôinformations d‚Äôauthentification.
On pourrait alors me r√©pondre que Github s‚Äôoccupe de la partie authentification et est d√©j√† en HTTPS. 
C‚Äôest vrai, mais Github va aussi renvoyer des tokens √† la suite de cette authentification. M√™me si ces tokens ne sont valides que pour une dur√©e limit√©e, il est pr√©f√©rable de les prot√©ger d‚Äôun bon vieux ‚Äúman in the middle‚Äù. De plus, √† l‚Äôheure o√π j‚Äô√©cris, les certificats SSL sont devenus tr√®s accessibles et certains sont gratuits !&lt;/p&gt;

&lt;amp-img src=&quot;https://farm9.staticflickr.com/8734/29161392566_c623d6519d_o_d.png&quot; width=&quot;620&quot; height=&quot;460&quot; layout=&quot;responsive&quot; alt=&quot;secret&quot;&gt;&lt;/amp-img&gt;

&lt;h3 id=&quot;cr√©ation-de-lapplication-aspnet-core&quot;&gt;Cr√©ation de l‚Äôapplication Aspnet Core&lt;/h3&gt;

&lt;p&gt;Depuis Visual Studio 2015, faites :
&lt;code class=&quot;highlighter-rouge&quot;&gt;File&lt;/code&gt; =&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;New&lt;/code&gt; =&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Project&lt;/code&gt;
S√©lectionnez &lt;code class=&quot;highlighter-rouge&quot;&gt;ASP.NET Core Web Application&lt;/code&gt;&lt;/p&gt;

&lt;amp-img src=&quot;https://farm9.staticflickr.com/8255/29088734792_91574f465a_o_d.png&quot; width=&quot;620&quot; height=&quot;460&quot; layout=&quot;responsive&quot; alt=&quot;Cr√©ation de l‚Äôapplication Aspnet Core&quot;&gt;&lt;/amp-img&gt;

&lt;p&gt;Entrez les noms pour le projet et la solution :
&lt;strong&gt;Projet&lt;/strong&gt; : AllInOne
&lt;strong&gt;Solution&lt;/strong&gt; Aspnet-OAuth2&lt;/p&gt;

&lt;p&gt;Cr√©ez un projet web vide&lt;/p&gt;
&lt;amp-img src=&quot;https://farm9.staticflickr.com/8317/28573011224_842b3780f5_o_d.png&quot; width=&quot;620&quot; height=&quot;460&quot; layout=&quot;responsive&quot; alt=&quot;Cr√©ation de l‚Äôapplication Aspnet Core&quot;&gt;&lt;/amp-img&gt;

&lt;p&gt;SI vous n‚Äôutilisez pas VS2015, cr√©ez vous-m√™mes la structure des dossiers et utilisez la commande suivante pour cr√©er le projet :&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet new
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;configuration&quot;&gt;Configuration&lt;/h3&gt;

&lt;h4 id=&quot;globaljson&quot;&gt;Global.json&lt;/h4&gt;

&lt;p&gt;Le fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;global.json&lt;/code&gt; d√©finit les param√®tres globaux √† votre solution.
Dans mon cas (par d√©faut), les chemins vers les projets et la version du SDK utilis√© sont :&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;projects&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;sdk&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1.0.0-preview2-003121&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;r√©f√©rences-et-packages-nuget&quot;&gt;R√©f√©rences et Packages nuget&lt;/h4&gt;

&lt;p&gt;Si vous d√©marrez avec .net Core et que vous n‚Äôavez pas encore l‚Äôhabitude des packages nuget (oui √ßa arrive encore ‚Ä¶), sachez que pour r√©aliser le framework de fa√ßon vraiment modulaire, l‚Äô√©quipe de Microsoft a d√©coup√© chaque petite fonctionnalit√© en packages. Et nous allons devoir les r√©f√©rencer via le fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;project.json&lt;/code&gt;, dans l‚Äôobjet &lt;code class=&quot;highlighter-rouge&quot;&gt;dependencies&lt;/code&gt;
Nous allons ajouter les packages qui permettent l‚Äôauthentification et l‚ÄôOAuth ainsi que la configuration.
Modifiez l‚Äôobjet comme cela :&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Microsoft.NETCore.App&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;platform&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Microsoft.AspNetCore.Diagnostics&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   
    &lt;span class=&quot;s2&quot;&gt;&quot;Microsoft.AspNetCore.Server.IISIntegration&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Microsoft.AspNetCore.Server.Kestrel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Microsoft.Extensions.Logging.Console&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Microsoft.AspNetCore.Authentication.Cookies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Microsoft.AspNetCore.Authentication.OAuth&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Microsoft.AspNetCore.DataProtection&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Microsoft.Extensions.Configuration.UserSecrets&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Microsoft.Extensions.FileProviders.Embedded&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Microsoft.Extensions.Configuration.EnvironmentVariables&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sauvegardez le fichier ou ex√©cutez la commande suivante, ce qui aura pour effet de lancer une restauration des packages dans VS2015 :&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dotnet restore
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;user-secret&quot;&gt;User Secret&lt;/h4&gt;

&lt;p&gt;Nous allons maintenant configurer les param√®tres OAuth r√©cup√©r√©s pr√©c√©demment sur Github.
Ces param√®tres doivent rester au maximum confidentiels, pour √©viter qu‚Äôune application lambda se fasse passer pour la v√¥tre. Il ne faut donc pas commiter ces informations sur un VCS.
Pour √©viter tout commit par inadvertance, nous allons utiliser le syst√®me des &lt;code class=&quot;highlighter-rouge&quot;&gt;user secrets&lt;/code&gt;.
Depuis Visual Studio, faites un clic-droit sur le projet puis allez sur manage User Secrets. Cela va vous cr√©er un fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;secrets.json&lt;/code&gt; vide.&lt;/p&gt;

&lt;amp-img src=&quot;https://farm9.staticflickr.com/8292/28573005474_1a5d7501bd_o_d.png&quot; width=&quot;457&quot; height=&quot;97&quot; layout=&quot;responsive&quot; alt=&quot;Cr√©ation de l‚Äôapplication Aspnet Core&quot;&gt;&lt;/amp-img&gt;

&lt;blockquote&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;**Si vous n'utilisez pas Visual Studio, cr√©ez un fichier √† la main √† l'emplacement suivant** Windows: `%APPDATA%\microsoft\UserSecrets\{userSecretsId}\secrets.json` Linux: `~/.microsoft/usersecrets/{userSecretsId}/secrets.json` Mac: `~/.microsoft/usersecrets/{userSecretsId}/secrets.json` Le param√®tre userSecretsId se trouve dans le fichier projects.json. Si vous utilisez Visual Studio il est rajouter pour vous, sinon ajoutez le √† la main. Pour moi la valeur est la suivante :  &quot;userSecretsId&quot;: &quot;aspnet-AllInOne-20160819103237&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ajoutez les 2 valeurs r√©cup√©r√©es sur Github&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;github:clientid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1234567890123456789&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;github:clientsecret&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;12345678901234567891234567890123456789&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nous allons voir par la suite comment facilement r√©cup√©rer les valeurs de ces param√®tres dans notre code.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Remarque :&lt;/strong&gt;
Lors de la mise en production, on va g√©n√©ralement utiliser des variables d‚Äôenvironnement qui sont faciles √† ajouter et cross-platform y compris Docker ! Cependant, ces valeurs seront toujours en clair. Pour des informations devant √™tre crypt√©es, il est recommand√© d‚Äôutiliser un syst√®me comme Vault de HashiCorp (https://www.vaultproject.io/) ou un √©quivalent. Ensuite, un simple fournisseur de configuration vous permettra de r√©cup√©rer les param√®tres.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;launchsettings&quot;&gt;launchSettings&lt;/h4&gt;

&lt;p&gt;Allez, courage, encore un peu de config !&lt;/p&gt;

&lt;p&gt;Nous allons √©diter le fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;launchSettings.json&lt;/code&gt; qui se trouve dans le r√©pertoire &lt;code class=&quot;highlighter-rouge&quot;&gt;Properties&lt;/code&gt; de votre projet.
Ce fichier d√©finit les configurations de lancement de l‚Äôapplication. Il y a deux profils par d√©faut : un pour le lancement via IIS express et l‚Äôautre pour le lancement en ligne de commande lorsque que l‚Äôon fait un &lt;em&gt;dotnet run&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Nous allons modifier les ports utilis√©s pour matcher ceux d√©finis lors de l‚Äôenregistrement de l‚Äôapplication dans Github, et mettre le protocole HTTPS en place.&lt;/p&gt;

&lt;p&gt;Apr√®s modification, j‚Äôobtiens le fichier suivant :&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;iisSettings&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;windowsAuthentication&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;anonymousAuthentication&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;iisExpress&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;applicationUrl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://localhost:44367/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;sslPort&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;44367&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;profiles&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;IIS Express&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;commandName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;IISExpress&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;launchBrowser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;launchUrl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://localhost:44367/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;environmentVariables&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;ASPNETCORE_ENVIRONMENT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Development&quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;AllInOne&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;commandName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Project&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;launchBrowser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;launchUrl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://localhost:44367/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;environmentVariables&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;ASPNETCORE_URLS&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://*:44367&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;ASPNETCORE_ENVIRONMENT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Development&quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notez que le param√®tre &lt;code class=&quot;highlighter-rouge&quot;&gt;launchUrl&lt;/code&gt; n‚Äôest pas l‚ÄôURL de votre serveur mais celle utilis√©e par le navigateur √† son lancement.
J‚Äôai rajout√© une variable d‚Äôenvironnement magique (ou presque) ASPNETCORE_URLS qui d√©finit les URLs utilis√©es par Kestrel.
Aspnet core utilise plusieurs variables d‚Äôenvironnement pr√©d√©finies permettant de facilement configurer vos environnements.&lt;/p&gt;

&lt;h4 id=&quot;ssl&quot;&gt;SSL&lt;/h4&gt;

&lt;p&gt;SSL c‚Äôest bien, mais encore faudrait-il un certificat ! 
Si tout va bien, au premier lancement avec IIS express, une popup va vous proposer de cr√©er un certificat local pour IIS express. Sinon, c‚Äôest s√ªrement que vous l‚Äôavez d√©j√†.
Nous allons utiliser ce m√™me certificat pour le mode sans IIS express.&lt;/p&gt;

&lt;p&gt;Cela concerne uniquement les gens sous Windows et pour l‚Äôenvironnement de d√©veloppement :&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Via le menu d√©marrer, lancez un mmc.&lt;/li&gt;
  &lt;li&gt;Cliquez sur  Fichier &amp;gt; Ajouter/Supprimer un composant.&lt;/li&gt;
  &lt;li&gt;Cliquez sur Certificates &amp;gt; Ajouter.&lt;/li&gt;
  &lt;li&gt;S√©lectionnez un compte d‚Äôordinateur et cliquez sur Suivant. S√©lectionnez l‚Äôordinateur local puis cliquez sur Terminer et Ok.&lt;/li&gt;
  &lt;li&gt;S√©lectionnez le certificat qui se trouve dans Certificats &amp;gt; Personnel &amp;gt; Certificats. Fa√Ætes un clic-droit sur le certificat localhost puis Toutes les t√¢ches &amp;gt; Exporter.&lt;/li&gt;
&lt;/ol&gt;

&lt;amp-img src=&quot;https://farm9.staticflickr.com/8236/29088730012_34403e01e2_o_d.png&quot; width=&quot;427&quot; height=&quot;174&quot; layout=&quot;responsive&quot; alt=&quot;folder&quot;&gt;&lt;/amp-img&gt;

&lt;ol&gt;
  &lt;li&gt;Choisissez Oui, exportez la cl√© priv√©e et incluez tous les certificats dans le chemin d‚Äôacc√®s de certification&lt;/li&gt;
  &lt;li&gt;Entrez un mot de passe, je vais utiliser ‚Äúdev‚Äù pour ce projet&lt;/li&gt;
  &lt;li&gt;Enregistrez les fichiers dans le sous-r√©pertoire suivant de votre projet ‚Äúcompiler\resources\iiCert.pfx‚Äù&lt;/li&gt;
&lt;/ol&gt;

&lt;amp-img src=&quot;https://farm9.staticflickr.com/8111/28575032573_c8ff54a06e_o_d.png&quot; width=&quot;611&quot; height=&quot;433&quot; layout=&quot;responsive&quot; alt=&quot;folder&quot;&gt;&lt;/amp-img&gt;

&lt;p&gt;&lt;em&gt;Ce dossier est un dossier sp√©cial, tous les fichiers d√©pos√©s ici seront compil√©s en ressources embarqu√©es.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;point-dentr√©e&quot;&gt;Point d‚Äôentr√©e&lt;/h4&gt;

&lt;p&gt;Dans les applications .core, le point d‚Äôentr√©e d‚Äôune application est la m√©thode statique main. Rien d‚Äô√©tonnant, sauf que pour Aspnet Core c‚Äôest pareil, donc fini les global.asax : tout le monde √† la m√™me enseigne.&lt;/p&gt;

&lt;p&gt;Nous allons faire quelques modifications simples dans le fichier Program.cs pour prendre en compte notre certificat pour notre serveur Kestrel.&lt;/p&gt;

&lt;h4 id=&quot;kestrel&quot;&gt;Kestrel&lt;/h4&gt;

&lt;p&gt;Un petit mot sur Kestrel pour ceux qui ne conna√Ætraient pas encore. Il s‚Äôagit d‚Äôun nouveau serveur web cross-platform bas√© sur Libuv, une librairie cross-platforme d‚Äôasynchronisme, comme le serveur NodeJS.
Cependant, Kestrel n‚Äôest pas pr√©vu pour √™tre le serveur web expos√©, il est pr√©conis√© d‚Äôutiliser un m√©canisme de proxy en utilisant IIS ou Nginx.&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.IO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Reflection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Security.Cryptography.X509Certificates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Microsoft.AspNetCore.Hosting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Microsoft.Extensions.FileProviders&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;AllInOne&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Program&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;WebHostBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseKestrel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;//Configure SSL&lt;/span&gt;
                    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serverCertificate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LoadCertificate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseHttps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serverCertificate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseContentRoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetCurrentDirectory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseIISIntegration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseStartup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X509Certificate2&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LoadCertificate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assembly&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Startup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetTypeInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;embeddedFileProvider&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;EmbeddedFileProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;AllInOne&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;certificateFileInfo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;embeddedFileProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetFileInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;compiler/resources/iisCert.pfx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;certificateStream&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;certificateFileInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;CreateReadStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;certificatePayload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memoryStream&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MemoryStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;certificateStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;CopyTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memoryStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;certificatePayload&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memoryStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;X509Certificate2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;certificatePayload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;dev&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;La modification est tr√®s simple : on ajoute des options pour le lancement du serveur Kestrel qui charge le certificat.
La m√©thode LoadCertificate va chercher le certificat qui est en ressource embarqu√©e, lit le contenu brut et retourne un certificat X509 en utilisant le mot de passe sp√©cifi√© lors de l‚Äôexport.&lt;/p&gt;

&lt;p&gt;Il ne reste plus qu‚Äô√† appeler l‚Äôextension UseHttps en passant le certificat.
Pour pouvoir utiliser cette extension, il nous faut ajouter un package suppl√©mentaire dans notre ficher &lt;code class=&quot;highlighter-rouge&quot;&gt;project.json&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ajoutez le package
‚ÄúMicrosoft.AspNetCore.Server.Kestrel.Https‚Äù: ‚Äú1.0.0‚Äù,&lt;/p&gt;

&lt;p&gt;Vous pouvez maintenant ex√©cuter l‚Äôapplication pour v√©rifier toute la configuration. Vous devriez voir un joli Hello world !&lt;/p&gt;

&lt;amp-img src=&quot;https://farm9.staticflickr.com/8875/29195124075_65b8930a33_o_d.png&quot; width=&quot;499&quot; height=&quot;332&quot; layout=&quot;responsive&quot; alt=&quot;dev&quot;&gt;&lt;/amp-img&gt;

&lt;h4 id=&quot;middlewares&quot;&gt;Middlewares&lt;/h4&gt;

&lt;p&gt;Nous allons enfin passer au code source. Nous allons, dans le fichier startup.cs, mettre en place les middleware n√©cessaires pour le bon fonctionnement de notre authentification.&lt;/p&gt;

&lt;h5 id=&quot;chargement-de-la-configuration&quot;&gt;Chargement de la configuration&lt;/h5&gt;

&lt;p&gt;Avant d‚Äôoublier, nous allons ajouter un constructeur √† notre startup, qui va s‚Äôoccuper de construire un objet de configuration √† partir des diff√©rents √©l√©ments qui la compose et stocker le r√©sultat dans une propri√©t√©.&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Startup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IHostingEnvironment&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ConfigurationBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SetBasePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ContentRootPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsDevelopment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddUserSecrets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IConfiguration&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;cookies-middleware&quot;&gt;Cookies Middleware&lt;/h4&gt;

&lt;p&gt;Nous allons, dans un premier temps, mettre en place le middleware responsable des cookies.
Ce middleware permet de s√©rialiser le principal de l‚Äôutilisateur dans un cookie encrypt√©.
Pour chaque requ√™te ult√©rieure, le cookie sera valid√© et d√©s√©rialis√© pour recr√©er le principal de l‚Äôutilisateur qui est assign√© au HttpContext.
Modifiez le code de la m√©thode ConfigureServices pour activer l‚Äôauthentification par cookie.&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Microsoft.AspNetCore.Authentication.Cookies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;‚Ä¶&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ConfigureServices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IServiceCollection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddAuthentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SignInScheme&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CookieAuthenticationDefaults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AuthenticationScheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ce code permet de d√©finir le middleware qui sera responsable de la persistance de l‚Äôidentit√© de l‚Äôutilisateur suite √† une authentification r√©ussie.&lt;/p&gt;

&lt;h5 id=&quot;authentification-scheme&quot;&gt;Authentification Scheme&lt;/h5&gt;

&lt;p&gt;Nous avons ici utilis√© une constante &lt;code class=&quot;highlighter-rouge&quot;&gt;CookieAuthenticationDefaults.AuthenticationScheme&lt;/code&gt; qui permet d‚Äôidentifier le middleware de Cookie. Chaque middleware d‚Äôauthentification aura donc son propre scheme, un identifiant unique permettant d‚Äôy acc√©der par la suite si plusieurs middlewares sont mis en place.
Il est m√™me possible de limiter les autorisations √† un ou plusieurs middlewares pr√©cis lorsque l‚Äôon utilise MVC
&lt;code class=&quot;highlighter-rouge&quot;&gt;[Authorize(ActiveAuthenticationSchemes = &quot;Cookie,Github&quot;)]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Il nous faut maintenant dire d‚Äôutiliser le middleware de cookie.
Ajoutez ce code juste apres le  if (env.IsDevelopment())&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseCookieAuthentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CookieAuthenticationOptions&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;AutomaticAuthenticate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;LoginPath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PathString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/login&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On active le middleware avec deux options :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;AutomaticAuthenticate : ce flag indique que le middleware doit s‚Äôex√©cuter √† chaque requ√™te et tenter de valider et de reconstruire tout principal s√©rialis√© dans un cookie&lt;/li&gt;
  &lt;li&gt;LoginPath : le chemin relatif o√π seront redirig√©s les requ√™tes lorsqu‚Äôun utilisateur tente d‚Äôacc√©der √† une ressource, mais n‚Äôa pas √©t√© authentifi√©.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Puisque que l‚Äôon a pr√©cis√© que le chemin relatif pour se connecter est &lt;code class=&quot;highlighter-rouge&quot;&gt;/login&lt;/code&gt;, il faut d√©finir une action √† ex√©cuter pour cet appel. Nul besoin de MVC pour √ßa ! Il suffit simplement d‚Äôenregistrer une action √† ex√©cuter pour le chemin en question.
Pour notre exemple, nous allons simplement simuler une authentification r√©ussie.&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/login&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Claim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClaimTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;toto&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;identity&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ClaimsIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CookieAuthenticationDefaults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AuthenticationScheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;principal&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ClaimsPrincipal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Authentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SignInAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CookieAuthenticationDefaults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AuthenticationScheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;principal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Redirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On cr√©e un principal √† partir d‚Äôun claims de type Name, puis on se connecte sur le middleware de cookie avec ce nouveau principal.
Si vous lancez l‚Äôapplication et que vous vous rendez sur le path ‚Äú/login‚Äù. Vous devriez voir qu‚Äôun cookie nomm√© .AspNetCore.Cookies a √©t√© cr√©√©.&lt;/p&gt;

&lt;amp-img src=&quot;https://farm9.staticflickr.com/8497/29088734152_3a68d0564d_o_d.png&quot; width=&quot;445&quot; height=&quot;58&quot; layout=&quot;responsive&quot; alt=&quot;cookie&quot;&gt;&lt;/amp-img&gt;

&lt;p&gt;Ajoutons tout de suite un page pour se d√©connecter&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/logout&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Authentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SignOutAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CookieAuthenticationDefaults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AuthenticationScheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Redirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Et pour nous √©viter d‚Äôaller regarder les cookies √† la main, modifions aussi l‚Äôaction principale pour afficher un peu plus qu‚Äôun hello world.&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ContentType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;text/html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Identities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;identity&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsAuthenticated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;h1&amp;gt;Hello anonymous&amp;lt;/h1&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;a href=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;gt; Login&amp;lt;/a&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$&quot;&amp;lt;h1&amp;gt;Hello &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;/h1&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;claim&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Claims&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;claim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;claim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;a href=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logout&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;Logout&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Et voil√†, on peut se connecter en tant que toto !&lt;/p&gt;

&lt;amp-img src=&quot;https://farm9.staticflickr.com/8204/29161391556_70c7a61a58_o_d.png&quot; width=&quot;458&quot; height=&quot;240&quot; layout=&quot;responsive&quot; alt=&quot;cookie&quot;&gt;&lt;/amp-img&gt;

&lt;h5 id=&quot;oauth-middleware&quot;&gt;Oauth middleware&lt;/h5&gt;

&lt;p&gt;Bon c‚Äôest bien tout √ßa mais on est venu pour faire de l‚ÄôOAuth nous !&lt;/p&gt;

&lt;p&gt;Ajoutons notre middleware OAuth qui est fourni par Microsoft dans le package
&lt;code class=&quot;highlighter-rouge&quot;&gt;Microsoft.AspNetCore.Authentication.OAuth&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseOAuthAuthentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OAuthOptions&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;AuthenticationScheme&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;GitHub&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;DisplayName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Github&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;ClientId&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;github:clientid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;ClientSecret&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;github:clientsecret&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;CallbackPath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PathString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/signin-github&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;AuthorizationEndpoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://github.com/login/oauth/authorize&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;TokenEndpoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://github.com/login/oauth/access_token&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;UserInformationEndpoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://api.github.com/user&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;ClaimsIssuer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;OAuth2-Github&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;SaveTokens&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;Events&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OAuthEvents&lt;/span&gt;
                 &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                     &lt;span class=&quot;n&quot;&gt;OnCreatingTicket&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
                     &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                         &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddClaim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Claim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                              &lt;span class=&quot;n&quot;&gt;ClaimsIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DefaultNameClaimType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;toto from git !&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                              &lt;span class=&quot;n&quot;&gt;ClaimValueTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClaimsIssuer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
                         &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FromResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                     &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Rien de bien compliqu√©, on d√©finit l‚Äôidentifiant (le scheme) ainsi que son nom, puis on r√©cup√®re les deux param√®tres depuis la configuration pour le clientId et clientSecret stock√©s pr√©c√©demment dans les user secrets.
Le CallbackPath doit correspondre √† celui fourni pendant la cr√©ation de l‚Äôapplication sur github et les endpoints sont ceux d√©finis par Github.
Le param√®tre SaveTokens permet d‚Äôenregistrer les tokens dans un objet sp√©cifique mais nous y reviendrons plus tard.&lt;/p&gt;

&lt;p&gt;Enfin, il est possible d‚Äôassocier des fonctions ex√©cut√©es pour les √©v√©nements survenant pendant la discussion OAuth.
Celui qui nous int√©resse particuli√®rement est OnCreatingTicket, qui survient lorsque le fournisseur a correctement authentifi√© l‚Äôutilisateur et que lui-m√™me a valid√© les droits d‚Äôacc√®s.
Pour cette fonction, je vais reprendre le code pr√©c√©dent qui va simple cr√©er un claims en dur.
Comme la fonction attend en retour un Task, on utilisera simplement la m√©thode Task.FromResult pour en cr√©er une.&lt;/p&gt;

&lt;p&gt;Voil√†, notre middleware est en place et il ne reste plus qu‚Äô√† y faire appel. Pour cela, on va demander l‚Äôauthentification sur le scheme Github.&lt;/p&gt;

&lt;p&gt;Modifions la m√©thode ex√©cute sur le chemin &lt;code class=&quot;highlighter-rouge&quot;&gt;/login&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/login&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Authentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ChallengeAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GitHub&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AuthenticationProperties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RedirectUri&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vous pouvez maintenant lancer l‚Äôapplication pour voir le resultat&lt;/p&gt;

&lt;amp-img src=&quot;https://farm9.staticflickr.com/8060/29088734012_da6cd90c25_o_d.png&quot; width=&quot;620&quot; height=&quot;460&quot; layout=&quot;responsive&quot; alt=&quot;cookie&quot;&gt;&lt;/amp-img&gt;

&lt;amp-img src=&quot;https://farm9.staticflickr.com/8480/29117135511_2ff54e2bd5_o_d.png&quot; width=&quot;846&quot; height=&quot;860&quot; layout=&quot;responsive&quot; alt=&quot;cookie&quot;&gt;&lt;/amp-img&gt;

&lt;amp-img src=&quot;https://farm9.staticflickr.com/8344/29088712842_4bf831dd29_o_d.png&quot; width=&quot;636&quot; height=&quot;387&quot; layout=&quot;responsive&quot; alt=&quot;cookie&quot;&gt;&lt;/amp-img&gt;

&lt;p&gt;Nous sommes maintenant authentifi√©s avec Github.
Il ne nous reste plus qu‚Äôune chose √† faire, remplacer notre claim qui est en dur par de vrais claims correspondant √† l‚Äôutilisateur r√©el.&lt;/p&gt;

&lt;p&gt;Pour r√©cup√©rer les informations qui nous int√©ressent, on va utiliser l‚ÄôAPI Github concernant la ressource User.
L‚Äôutilisation de l‚ÄôAPI n√©cessite un token valide pour √™tre utilis√©e, et maintenant nous en avons un !&lt;/p&gt;

&lt;p&gt;Rempla√ßons le code de OnCreatingTicket par celui-ci :&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;OnCreatingTicket&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;c1&quot;&gt;// Get the GitHub user&lt;/span&gt;
                        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HttpRequestMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserInformationEndpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Authorization&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AuthenticationHeaderValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Bearer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AccessToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Accept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MediaTypeWithQualityHeaderValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
                        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Backchannel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SendAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RequestAborted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;EnsureSuccessStatusCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ReadAsStringAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
                        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;identifier&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsNullOrEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;identifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddClaim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Claim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;ClaimTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NameIdentifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;identifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;ClaimValueTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClaimsIssuer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;login&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsNullOrEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddClaim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Claim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;ClaimsIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DefaultNameClaimType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;ClaimValueTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClaimsIssuer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsNullOrEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddClaim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Claim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&quot;urn:github:name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;ClaimValueTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClaimsIssuer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsNullOrEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddClaim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Claim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;ClaimTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;ClaimValueTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClaimsIssuer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsNullOrEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddClaim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Claim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&quot;urn:github:url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;ClaimValueTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClaimsIssuer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Premi√®re √©tape, on fait une requ√™te sur cette url https://api.github.com/user en utilisant l‚Äôaccesstoken qui est dans notre context actuel et donc valide.
La requ√™te nous renvoie une r√©ponse en json dans laquelle on va piocher les informations int√©ressantes :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;id&lt;/li&gt;
  &lt;li&gt;login&lt;/li&gt;
  &lt;li&gt;name&lt;/li&gt;
  &lt;li&gt;email&lt;/li&gt;
  &lt;li&gt;url&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A partir de ces donn√©es, il ne reste plus qu‚Äô√† cr√©er des claims et les ajouter √† l‚Äôidentit√© de l‚Äôutilisateur de notre context.&lt;/p&gt;

&lt;p&gt;Si vous relancez l‚Äôapplication et que vous vous d√©connectez et reconnectez, vous pouvez voir maintenant appara√Ætre les informations de l‚Äôutilisateur.&lt;/p&gt;

&lt;amp-img src=&quot;https://farm9.staticflickr.com/8496/28573010054_bbe7ff587c_o_d.png&quot; width=&quot;678&quot; height=&quot;521&quot; layout=&quot;responsive&quot; alt=&quot;hello&quot;&gt;&lt;/amp-img&gt;

&lt;p&gt;Dernier point avant de terminer cet article. Nous avons d√©fini l‚Äôoption SaveToken √† true auparavant. Nous allons maintenant interroger l‚Äôobjet contenant les tokens et les afficher pour v√©rifier le bon fonctionnement.&lt;/p&gt;

&lt;p&gt;Ajoutez le code suivant √† la suite de l‚Äôaffichage des claims dans la fonction du middleware principal.&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Tokens:&amp;lt;br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Access Token: &quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Authentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetTokenAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;access_token&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Refresh Token: &quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Authentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetTokenAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;refresh_token&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Token Type: &quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Authentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetTokenAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;token_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;expires_at: &quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Authentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetTokenAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;expires_at&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;br&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ALL DONE !&lt;/p&gt;

&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;

&lt;p&gt;Dans cet article, nous avons pu voir comme il est simple de mettre en place une authentification OAuth en moins de 200 lignes de code. Il est tout de m√™me rare d‚Äôutiliser ce code tel quel, notamment car le principe de Responsabilit√© unique (Single Responsibility Principle) n‚Äôest pas respect√©. Dans le prochain article, nous utiliserons un middleware sp√©cifique pour la connexion Github.&lt;/p&gt;

&lt;p&gt;Retrouvez l‚Äôensemble du code sur &lt;a href=&quot;https://github.com/SoatGroup/aspnetcore-oauth2&quot;&gt;le GitHub de SOAT&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 24 Oct 2016 00:00:00 +0000</pubDate>
        <link>https://www.evilznet.com/2016/10/24/introduction-oauth2-aspnet/</link>
        <guid isPermaLink="true">https://www.evilznet.com/2016/10/24/introduction-oauth2-aspnet/</guid>
        
        <category>dotnet</category>
        
        <category>Informatique</category>
        
        
      </item>
    
      <item>
        <title>PrivateEye, Profiling as Code</title>
        <description>&lt;p&gt;J‚Äôai eu la change de participer √† un petit atelier sur &lt;strong&gt;Private Eye&lt;/strong&gt; avec &lt;strong&gt;Greg Young&lt;/strong&gt; durant la conf√©rence NCraft 2016.&lt;/p&gt;

&lt;p&gt;Greg Young est tr√®s connu dans la communaut√© pour avoir √©vang√©lis√© le terme de CQRS. Mais pour cette occasion il ne s‚Äôagit plus de parler de CQRS mais bel et bien d‚Äôun outil de profiling d√©velopp√© par Greg lui m√™me.&lt;/p&gt;

&lt;p&gt;Dans cet atelier, nous avons jou√© avec PrivateEye et appris √† monitorer un processus de la CLR via une REPL F#. Les participants pouvaient aussi bien √™tre sous Windows, OSX ou Linux.&lt;/p&gt;

&lt;h1 id=&quot;profiling&quot;&gt;Profiling&lt;/h1&gt;

&lt;p&gt;Avant de se lancer dans le vif du sujet, il est bon de rappeler ce qu‚Äôest le profiling et dans quel cas cela est utilis√©.&lt;/p&gt;

&lt;p&gt;On utilise un Profiler principalement lorsque l‚Äôon a des probl√®mes li√©s √† la performance. Un profiler va r√©colter un grand nombre d‚Äôinformations sur l‚Äôex√©cution d‚Äôune application comme la m√©moire allou√©e, par qui? comment ? √† quelle fr√©quence? etc‚Ä¶
Le but √©tant de trouver les goulots d‚Äô√©tranglement, les fuites m√©moire, des consommations importantes de CPU et autres probl√©matiques qui peuvent ralentir le bon fonctionnement.&lt;/p&gt;

&lt;p&gt;De nombreux profilers existent sur le march√© et Visual Studio en inclue m√™me un par d√©faut. Cependant, ils sont souvent difficiles √† mettre en place sur des environnement de production. Imaginez un environnement avec une architecture de type CQRS E/S qui traite un grand nombre de requ√™tes. Il peut √™tre compliqu√©, voir impossible de recr√©er le sc√©nario qui a engendr√© les probl√®mes en production lorsque cela est d√ª √† une charge trop importante. Private Eye √† donc √©t√© cr√©√© dans l‚Äôoptique de r√©soudre cette probl√©matique.&lt;/p&gt;

&lt;h1 id=&quot;repl&quot;&gt;Repl&lt;/h1&gt;

&lt;p&gt;Mais l√† o√π Private eye sort du lot habituel, c‚Äôest qu‚Äôil nous offre une API qui permet par code de requ√™ter le moteur de profiling.
L‚Äôapi peut √™tre utilis√©e via tous les langages .net, mais le focus est pour l‚Äôinstant mis sur l‚Äôutilisation √† travers la REPL F#.&lt;/p&gt;

&lt;p&gt;**Qu‚Äôest ce qu‚Äôune REPL ? **&lt;/p&gt;

&lt;p&gt;Ce terme signifie &lt;strong&gt;Read‚Äìeval‚Äìprint loop&lt;/strong&gt;. 
Il s‚Äôagit simplement d‚Äôune boucle en qui lit le code entr√©, l‚Äô√©value et affiche le r√©sultat. Globalement c‚Äôest ce que l‚Äôon retrouve dans tous les langages de scripting ou de shell.
On peut aussi parler de session interactive. Sous Visual Studio 2015 il existe une fen√™tre interactive pour F# et pour C#.&lt;/p&gt;

&lt;amp-img src=&quot;https://msdnshared.blob.core.windows.net/media/MSDNBlogsFS/prod.evol.blogs.msdn.com/CommunityServer.Blogs.Components.WeblogFiles/00/00/01/29/92/3187.2015-10-07%20VS2015Update1CTP-1-interactive.png&quot; width=&quot;691&quot; height=&quot;290&quot; layout=&quot;responsive&quot; alt=&quot;AMP&quot;&gt;&lt;/amp-img&gt;

&lt;p&gt;Pour en savoir plus il existe une introduction √† la REPL C# sur channel 9  &lt;a href=&quot;https://channel9.msdn.com/Events/Visual-Studio/Connect-event-2015/103&quot;&gt;ici&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;utilisation&quot;&gt;Utilisation&lt;/h1&gt;
&lt;p&gt;La version pr√©sent√©e pour l‚Äôoccasion est la version gratuite, que l‚Äôon peut t√©l√©charger &lt;a href=&quot;http://www.privateeye.io/free.html&quot;&gt;ici&lt;/a&gt;
Il vous faudra aussi F# d‚Äôinstall√© sur votre machine pour ex√©cuter &lt;strong&gt;fsi.exe&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Les √©tapes sont finalement simples :&lt;/p&gt;

&lt;h2 id=&quot;configurer-le-profiling-de-la-clr&quot;&gt;Configurer le profiling de la CLR&lt;/h2&gt;

&lt;p&gt;Ce syst√®me existe de base avec la CLR. Il suffit de d√©finir les valeurs des variables d‚Äôenvironnement suivantes:&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;COR_ENABLE_PROFILING&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;COR_PROFILER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;={&lt;/span&gt;D51126CE-1443-42ED-8FD6-B4D32C466292&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;COR_PROFILER_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%~dp0x64\PrivateEye.Profiler.dll

&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PRIVATEEYE_PROFILER_MODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PRIVATEEYE_PROFILER_PORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4444
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;d√©mmarer-une-session-interactive-en-√©coute&quot;&gt;D√©mmarer une session interactive en √©coute&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;On lance une session interactive F# :  &lt;code class=&quot;highlighter-rouge&quot;&gt;fsi.exe&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-fsharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// On charge privateeye.fsx&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;privateeye.fsx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// On import le namespace PrivateEye.Bridge&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PrivateEye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Bridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;// on ajoute des fonctions d'affichage pr√©d√©finies. &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Ce m√©canisme est pr√©sent de base, il permet d'enregistrer un fonction d'affichage pour un type donn√©. &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Dans notre cas on enregistre six fonctions.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;addFsiPrinters&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Enfin, on se met on √©coute d'une connexion&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;Profiler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;StartListening&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Le profiler est maintenant pr√™t √† recevoir et traiter les informations.
Il ne reste plus qu‚Äô√† lancer votre application .net.
Une connexion va alors s‚Äôouvrir tant que votre programme .net est en cours d‚Äôex√©cution puis se fermer automatiquement.&lt;/p&gt;

&lt;h2 id=&quot;requ√™ter-le-profiler&quot;&gt;Requ√™ter le profiler&lt;/h2&gt;

&lt;p&gt;On peut maintenant regarder ce que le profiler a r√©cup√©r√© comme informations.&lt;/p&gt;

&lt;p&gt;Dans la session interactive F# ex√©cutez la fonction suivante :&lt;/p&gt;

&lt;div class=&quot;language-fsharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mostCalledMethods&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Une liste de toute les m√©thodes appel√© par le programme sont alors affich√©es. 
Disons que seulement les dix premi√®res nous int√©resses, il suffit de d‚Äôenvoyer le r√©sultat √† une s√©quence et de s√©lectionner que dix √©l√©ments.&lt;/p&gt;

&lt;div class=&quot;language-fsharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mostCalledMethods&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;take&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Voici un petit r√©sum√© en image&lt;/p&gt;

&lt;amp-img src=&quot;/content/privateeye-demo.gif&quot; width=&quot;731&quot; height=&quot;449&quot; layout=&quot;responsive&quot; alt=&quot;AMP&quot;&gt;&lt;/amp-img&gt;

&lt;blockquote&gt;
  &lt;p&gt;Pour vous simplifier la vie vous pouvez simplement lancer &lt;code class=&quot;highlighter-rouge&quot;&gt;runfsi.cmd&lt;/code&gt; qui fera tout pour vous :)
Puis ouvrir une fen√™tre de commande et ex√©cuter &lt;code class=&quot;highlighter-rouge&quot;&gt;launchapp_anycpu.cmd PATH_DE_VOTRE_APP_NET&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;observation-pendant-lex√©cution&quot;&gt;Observation pendant l‚Äôex√©cution&lt;/h2&gt;

&lt;p&gt;Bien qu‚Äôil existe √† ce jour tout un tas de m√©thodes perm√©ttant de requ√™ter les informations r√©colt√©es pendant l‚Äôexecution. (dont la liste est disponible &lt;a href=&quot;https://github.com/PrivateEye/PrivateEye/wiki/FSharp-API&quot;&gt; ici &lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Il est aussi possible de s‚Äôabonner sur des √©v√®nements pendant l‚Äô√©coute ! Il ne s‚Äôagit pas r√©ellement d‚Äô√©v√®nement au sens C#, mais plut√¥t d‚Äôobservable aux quelles nous allons souscrire.
Voici un petit exemple, toujours dans la session interactive entrez le code suivant:&lt;/p&gt;

&lt;div class=&quot;language-fsharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;onAllocation&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Observable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;printfn&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Alloc %s&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Relancez votre programme .net.
Vous devriez maintenant voir s‚Äôafficher dans la session&lt;/p&gt;

&lt;div class=&quot;language-fsharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Alloc&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;XXXXX&lt;/span&gt; 
&lt;span class=&quot;nc&quot;&gt;Alloc&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;XXXXX&lt;/span&gt; 
&lt;span class=&quot;nc&quot;&gt;Alloc&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;XXXXX&lt;/span&gt; 
&lt;span class=&quot;nc&quot;&gt;Alloc&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;XXXXX&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Evidement il s‚Äôagit ici d‚Äôun exemple tr√®s simple avec un simple log, mais il ne tiens qu‚Äô√† vous de d√©finir ce que vous voulez ex√©cuter √† chaque callback.
Coupl√© √† la librairie &lt;code class=&quot;highlighter-rouge&quot;&gt;FSharp.Charting&lt;/code&gt; on peut facilement envisager de sortir de beaux graphiques.&lt;/p&gt;

&lt;p&gt;Il existe aussi d‚Äôautres observable mis √† notre disposition notamment : &lt;code class=&quot;highlighter-rouge&quot;&gt;onException()&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;onGCCompleted()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;La liste compl√®te est &lt;a href=&quot;https://github.com/PrivateEye/PrivateEye/wiki/FSharp-API#observables&quot;&gt;ici&lt;/a&gt; ainsi qu‚Äôun compl√©ment d‚Äôinformation sur les types utilisables dans les callbacks &lt;a href=&quot;https://github.com/PrivateEye/PrivateEye/wiki/Using-Observables&quot;&gt;ici&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;record-and-replay&quot;&gt;Record and Replay&lt;/h2&gt;

&lt;p&gt;C‚Äôest bien tout √ßa, mais si j‚Äôai oubli√© de souscrire √† l‚Äôobservable ou que j‚Äôai besoin de modifier quelque chose dans la souscription ? 
Il faut que je relance mon application et que je rejoue tout mon sc√©nario :‚Äô(&lt;/p&gt;

&lt;p&gt;Bonne nouvelle ! ce n‚Äôest pas n√©cessaire ! Il est possible avec PrivateEye d‚Äôenregistrer une session et de la rejouer ensuite. 
La mise en place est extr√™mement simple apr√®s avoir mis en √©coute la session il vous suffit d‚Äôappeler la m√©thode startRecording avec le nom du fichier ou seront stock√©es les donn√©es.&lt;/p&gt;

&lt;div class=&quot;language-fsharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;startListening&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Starting&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TCP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listening&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TCP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4444&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;startRecording&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mysession.foo&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Quelques informations compl√©mentaires :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Cette m√©thode bloque votre session, il existe une autre fonction startRecordingInteractive() pour continuer √† utiliser la session si besoin&lt;/li&gt;
  &lt;li&gt;Le fichier de donn√©es va √™tre tr√®s gros, pr√©voyez suffisamment de place (plusieurs Giga)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Une fois l‚Äôenregistrement termin√©, le fichier est cr√©√©. Il vous suffit alors d‚Äôex√©cuter &lt;code class=&quot;highlighter-rouge&quot;&gt;replayRecording()&lt;/code&gt; pour rejouer la session.&lt;/p&gt;

&lt;div class=&quot;language-fsharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;replayRecording&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mysession.foo&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Starting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;replay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Received&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;identification&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Mono&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PrivateEye&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Process&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Id&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;484&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Commercial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;False&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Replay&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5898240&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;58720256&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Threading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Threading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;AsyncState&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                               &lt;span class=&quot;nc&quot;&gt;CreationOptions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                               &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                               &lt;span class=&quot;nc&quot;&gt;Id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                               &lt;span class=&quot;nc&quot;&gt;IsCanceled&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                               &lt;span class=&quot;nc&quot;&gt;IsCompleted&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                               &lt;span class=&quot;nc&quot;&gt;IsFaulted&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                               &lt;span class=&quot;nc&quot;&gt;Status&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Running&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;Replay&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11796480&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;58720256&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Replay&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17694720&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;58720256&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Replay&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23592960&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;58720256&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Replay&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;29491200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;58720256&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Replay&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;35389440&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;58720256&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Replay&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;41287680&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;58720256&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Replay&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;47185920&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;58720256&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Replay&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;53084160&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;58720256&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Replay&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;version-payante&quot;&gt;Version payante&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cette version n‚Äôa malheureusement pas pu √™tre pr√©sent√©   durant la NCraft.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Via la version payant, il vous sera possible de monitorer votre environnement de production. 
L‚Äôensemble du syst√®me pr√©sent√© fonctionnera alors dans l‚Äôautre sens. Vos applications de production seront elles en attentent de connexion et depuis votre session interactive F# vous allez vous connecter √† l‚Äôapplication d√©sir√©e.
Par d√©faut, rien ne sera monitorer. Il faudra activer chaque fonctionnalit√©n petit √† petit et ce de fa√ßon tr√®s pr√©cise pour √©viter de faire tomber la production.&lt;/p&gt;

&lt;p&gt;Je ne peux malheureusement pas donner plus d‚Äôinformations pour l‚Äôinstant car cette version n‚Äôest pas encore disponible.&lt;/p&gt;

&lt;h1 id=&quot;questions-en-vrac&quot;&gt;Questions en vrac&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Y aura t‚Äôil un support des applications &lt;strong&gt;.net Core&lt;/strong&gt; ?
    &lt;ul&gt;
      &lt;li&gt;Non pas pour tout de suite car les API Core √† utiliser ne sont pas encore bien d√©finies et ce ne sera pas le cas avant pas mal de temps.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Pour quand est pr√©vu la sortie de la version payant ?
    &lt;ul&gt;
      &lt;li&gt;Une sortie vers la fin l‚Äôann√©e 2016 est envisag√©.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Bien que pas encore mature, PrivateEye est un outil prometteur qui s‚Äôadresse √©videmment √† des connaiseurs et tout bon Hackeur.
La maitrise de F# n‚Äôest pas une n√©c√©ssit√© et il existe meme un package nuget que l‚Äôon peut facilement r√©f√©rencer dans un projet .net.
Bref pour conclure je dirais ‚ÄúWait and See‚Äù&lt;/p&gt;

</description>
        <pubDate>Fri, 17 Jun 2016 00:00:00 +0000</pubDate>
        <link>https://www.evilznet.com/2016/06/17/PrivateEye-Profiling-as-Code/</link>
        <guid isPermaLink="true">https://www.evilznet.com/2016/06/17/PrivateEye-Profiling-as-Code/</guid>
        
        <category>dotnet</category>
        
        <category>Informatique</category>
        
        
      </item>
    
      <item>
        <title>Options de d√©marrage pour Mac</title>
        <description>&lt;p&gt;Voici un r√©capitulatif des options de d√©marrage qu‚Äôil est bon de conna√Ætre pour d√©panner votre Mac. Dans mon cas mon Macbook Air :)
Laissez les touches enfonc√©es pendant de le boot.&lt;/p&gt;

&lt;hr /&gt;

&lt;amp-gist data-gistid=&quot;8e9d099fefbaa161a82929506dd6e20e&quot; data-file=&quot;mac-boot-options.csv&quot; layout=&quot;fixed-height&quot; height=&quot;978&quot;&gt;
&lt;/amp-gist&gt;
</description>
        <pubDate>Sun, 01 May 2016 00:00:00 +0000</pubDate>
        <link>https://www.evilznet.com/2016/05/01/mac-startup-options/</link>
        <guid isPermaLink="true">https://www.evilznet.com/2016/05/01/mac-startup-options/</guid>
        
        <category>Mac</category>
        
        <category>Informatique</category>
        
        
      </item>
    
      <item>
        <title>Zoom sur le contenu dans Chrome</title>
        <description>&lt;p&gt;On est tous habitu√© √† utiliser le zoom sur nos navigateurs mobile en double tapant lorsque le contenu d‚Äôun site web n‚Äôest pas adapt√© l‚Äô√©cran.
Cette habitude je l‚Äôai aussi sur les PC et Apple a ajout√©e la fonctionnalit√© sur Safari, mais qu‚Äôen est-il pour Chrome mon bien aim√© ? Pour l‚Äôinstant rien de natif.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Heureusement un tour rapide sur le &lt;strong&gt;Chrome Store&lt;/strong&gt; et j‚Äôai trouv√© ce que je voulais !&lt;/p&gt;

&lt;amp-youtube data-videoid=&quot;FbcwF57DifI&quot; layout=&quot;responsive&quot; width=&quot;480&quot; height=&quot;270&quot;&gt;&lt;/amp-youtube&gt;

&lt;p&gt;c‚Äôest ici : &lt;a title=&quot;Zoom on DoubleClick&quot; href=&quot;https://chrome.google.com/webstore/detail/zoom-on-doubleclick/jkmalmidnicnnmceielaelokkdmmgkcb&quot; target=&quot;_blank&quot;&gt;https://chrome.google.com/webstore/detail/zoom-on-doubleclick/jkmalmidnicnnmceielaelokkdmmgkcb&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 05 Nov 2013 16:13:00 +0000</pubDate>
        <link>https://www.evilznet.com/2013/11/05/zoom-sur-le-contenu-dans-chrome/</link>
        <guid isPermaLink="true">https://www.evilznet.com/2013/11/05/zoom-sur-le-contenu-dans-chrome/</guid>
        
        <category>chrome</category>
        
        <category>extention</category>
        
        <category>Informatique</category>
        
        
      </item>
    
      <item>
        <title>√âquivalent de Pack et Unpack (php,perl) en .net</title>
        <description>&lt;p&gt;Je me suis lancer dans la conversion d‚Äôun petit projet PHP vers C#, et je suis tomb√© sur une fonction qui m‚Äô√©tait totalement inconnue √† savoir &lt;code class=&quot;highlighter-rouge&quot;&gt;unpack()&lt;/code&gt;.
Je vais vous partager le r√©sultat de mes recherches sur ce sujet.&lt;/p&gt;

&lt;p&gt;Il s‚Äôagit en fait de deux fonctions &lt;code class=&quot;highlighter-rouge&quot;&gt;pack()&lt;/code&gt; qui compacte les arguments args dans un tableau d‚Äôoctet binaire et &lt;code class=&quot;highlighter-rouge&quot;&gt;unpack()&lt;/code&gt; qui fait l‚Äôinverse.
Ces deux fonctions proviennent √† la base de perl mais sont impl√©ment√©es partiellement en php, (certain format ne sont pas support√©s).&lt;/p&gt;

&lt;p&gt;Vous pouvez chercher sur la MSDN vous ne trouverez aucun √©quivalent complet de ces deux fonctions.
J‚Äôai donc demand√© √† ma bible .net, Mister Jb Evain, si il en avait d√©j√† entendu parl√© et en deux minutes m‚Äôa sortie une classe existante dans le framework Mono   &lt;a href=&quot;http://www.mono-project.com/Mono_DataConvert&quot;&gt;Mono_DataConvert&lt;/a&gt;. Merci Jb :)
M√™me si Miguel de Icaza et son √©quipe √† fait du bon boulot, son impl√©mentation reste cependant elle aussi incomplete.&lt;/p&gt;

&lt;p&gt;Je vais essaye de vous donner un ensemble d‚Äôexemples avec le code php et sont √©quivalent .net.&lt;/p&gt;

&lt;h3 id=&quot;une-cha√Æne-compl√©t√©e-avec-null&quot;&gt;Une cha√Æne compl√©t√©e avec NULL&lt;/h3&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// PHP&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$packed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a10&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fox&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$unpacked&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;unpack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a10&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$packed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// C#&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;packed&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;fox&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;PadRight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unpacked&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASCIIEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASCII&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notez que la distinction entre sign√© et non sign√© n‚Äôaffecte que la fonction unpack , tandis que la fonction pack fournira le m√™me r√©sultat pour les deux formats.
De plus, notez que PHP enregistre de mani√®re interne et int√©grale les valeurs : cette repr√©sentation d√©pend de la machine. Si vous essayez d‚Äôenregistrer une valeur trop grande, elle risque d‚Äô√™tre convertie et de donner lieu √† des effets de bords vicieux.&lt;/p&gt;
</description>
        <pubDate>Wed, 28 Aug 2013 07:21:00 +0000</pubDate>
        <link>https://www.evilznet.com/2013/08/28/equivalent-de-pack-et-unpack-phpperl-en-net/</link>
        <guid isPermaLink="true">https://www.evilznet.com/2013/08/28/equivalent-de-pack-et-unpack-phpperl-en-net/</guid>
        
        
        <category>dataconvert</category>
        
        <category>Informatique</category>
        
        <category>Mono</category>
        
        <category>perl</category>
        
        <category>php</category>
        
        <category>programmation</category>
        
      </item>
    
  </channel>
</rss>
